; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\tcpsocket.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\tcpsocket.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\tcpsocket.crf ..\src\TcpSocket.c]
                          THUMB

                          AREA ||i.HttpdServerThread_Create||, CODE, READONLY, ALIGN=2

                  HttpdServerThread_Create PROC
;;;31     *******************************************************************************/ 
;;;32     extern void HttpdServerThread_Create(void) 
000000  b50e              PUSH     {r1-r3,lr}
;;;33     {
;;;34         hfthread_create(HttpdServer_ThreadFunc, "HttpServer", 512, (void*)1, HFTHREAD_PRIORITIES_MID, NULL, NULL); 
000002  2000              MOVS     r0,#0
000004  2202              MOVS     r2,#2
000006  e9cd2000          STRD     r2,r0,[sp,#0]
00000a  2301              MOVS     r3,#1
00000c  0212              LSLS     r2,r2,#8
00000e  a103              ADR      r1,|L1.28|
000010  9002              STR      r0,[sp,#8]
000012  4805              LDR      r0,|L1.40|
000014  f7fffffe          BL       hfthread_create
;;;35     }
000018  bd0e              POP      {r1-r3,pc}
;;;36     /*******************************************************************************
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
00001c  48747470          DCB      "HttpServer",0
000020  53657276
000024  657200  
000027  00                DCB      0
                  |L1.40|
                          DCD      HttpdServer_ThreadFunc

                          AREA ||i.HttpdServer_ThreadFunc||, CODE, READONLY, ALIGN=2

                  HttpdServer_ThreadFunc PROC
;;;41     *******************************************************************************/ 
;;;42     USER_FUNC static void HttpdServer_ThreadFunc(void* arg)
000000  b088              SUB      sp,sp,#0x20
;;;43     { 
;;;44     	int                 recv_num = 0; 
000002  2400              MOVS     r4,#0
;;;45     	int                 iTmp=1, AddrSize, iListenHttpFD = -1; 
000004  2001              MOVS     r0,#1
000006  9007              STR      r0,[sp,#0x1c]
000008  1e86              SUBS     r6,r0,#2
;;;46         int                 iClientHttpFD = -1;
00000a  1e85              SUBS     r5,r0,#2
;;;47         struct sockaddr_in  ServerAddr; 
;;;48     
;;;49     	iListenHttpFD = socket(AF_INET, SOCK_STREAM, 0); 
00000c  2200              MOVS     r2,#0
00000e  2101              MOVS     r1,#1
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       hf_lwip_socket
000016  4606              MOV      r6,r0
;;;50     	if( iListenHttpFD < 0 ) 
;;;51     	{ 
;;;52     		//u_printf("create Tcp socket fail\n"); 
;;;53     	} 
;;;54     
;;;55     	memset((char*)&ServerAddr,0, sizeof(ServerAddr));
000018  2000              MOVS     r0,#0
00001a  9002              STR      r0,[sp,#8]
00001c  9003              STR      r0,[sp,#0xc]
00001e  9004              STR      r0,[sp,#0x10]
000020  9005              STR      r0,[sp,#0x14]
;;;56     	
;;;57         ServerAddr.sin_family       = AF_INET;
000022  2002              MOVS     r0,#2
000024  f88d0009          STRB     r0,[sp,#9]
;;;58         ServerAddr.sin_port         = htons(80);
000028  2050              MOVS     r0,#0x50
00002a  f7fffffe          BL       lwip_htons
00002e  f8ad000a          STRH     r0,[sp,#0xa]
;;;59         ServerAddr.sin_addr.s_addr  = htonl(INADDR_ANY);
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       lwip_htonl
000038  9003              STR      r0,[sp,#0xc]
;;;60         
;;;61     	iTmp = 1; 
00003a  2001              MOVS     r0,#1
00003c  9007              STR      r0,[sp,#0x1c]
;;;62     	if(setsockopt(iListenHttpFD, SOL_SOCKET, SO_KEEPALIVE, &iTmp, sizeof(iTmp))<0)
00003e  2004              MOVS     r0,#4
000040  ab07              ADD      r3,sp,#0x1c
000042  2208              MOVS     r2,#8
000044  0d29              LSRS     r1,r5,#20
000046  9000              STR      r0,[sp,#0]
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       lwip_setsockopt
;;;63     	{
;;;64     		//u_printf("set SO_KEEPALIVE fail\n");
;;;65     	}
;;;66     	iTmp = 60; 
00004e  203c              MOVS     r0,#0x3c
000050  9007              STR      r0,[sp,#0x1c]
;;;67     	if(setsockopt(iListenHttpFD, IPPROTO_TCP, TCP_KEEPIDLE, &iTmp, sizeof(iTmp))<0)
000052  2004              MOVS     r0,#4
000054  ab07              ADD      r3,sp,#0x1c
000056  2203              MOVS     r2,#3
000058  2106              MOVS     r1,#6
00005a  9000              STR      r0,[sp,#0]
00005c  4630              MOV      r0,r6
00005e  f7fffffe          BL       lwip_setsockopt
;;;68     	{
;;;69     		//u_printf("set TCP_KEEPIDLE fail\n");
;;;70     	}
;;;71     	iTmp = 6;
000062  2006              MOVS     r0,#6
000064  9007              STR      r0,[sp,#0x1c]
;;;72     	if(setsockopt(iListenHttpFD, IPPROTO_TCP, TCP_KEEPINTVL, &iTmp, sizeof(iTmp))<0)
000066  2004              MOVS     r0,#4
000068  ab07              ADD      r3,sp,#0x1c
00006a  4602              MOV      r2,r0
00006c  2106              MOVS     r1,#6
00006e  9000              STR      r0,[sp,#0]
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       lwip_setsockopt
;;;73     	{
;;;74     		//u_printf("set TCP_KEEPINTVL fail\n");
;;;75     	}
;;;76     	iTmp = 5;
000076  2005              MOVS     r0,#5
000078  9007              STR      r0,[sp,#0x1c]
;;;77     	if(setsockopt(iListenHttpFD, IPPROTO_TCP, TCP_KEEPCNT, &iTmp, sizeof(iTmp))<0)
00007a  2004              MOVS     r0,#4
00007c  ab07              ADD      r3,sp,#0x1c
00007e  2205              MOVS     r2,#5
000080  2106              MOVS     r1,#6
000082  9000              STR      r0,[sp,#0]
000084  4630              MOV      r0,r6
000086  f7fffffe          BL       lwip_setsockopt
;;;78     	{
;;;79     		//u_printf("set TCP_KEEPCNT fail\n");
;;;80     	}
;;;81     	// 
;;;82     	if(bind(iListenHttpFD, (struct sockaddr*)&ServerAddr, sizeof(ServerAddr)) < 0)
00008a  2210              MOVS     r2,#0x10
00008c  a902              ADD      r1,sp,#8
00008e  4630              MOV      r0,r6
000090  f7fffffe          BL       lwip_bind
;;;83     	{
;;;84     		//u_printf("bind Tcp socket error\n"); 
;;;85     	}
;;;86         if(listen(iListenHttpFD, 5) < 0)
000094  2105              MOVS     r1,#5
000096  4630              MOV      r0,r6
000098  f7fffffe          BL       hf_lwip_listen
;;;87         {
;;;88     		//u_printf("Listen Tcp socket error\n");
;;;89         }
;;;90         HttpServerRecvBuf[HTTP_SERVER_RECV_LENGTH] = '\0'; 
00009c  2100              MOVS     r1,#0
00009e  4817              LDR      r0,|L2.252|
0000a0  f8801578          STRB     r1,[r0,#0x578]
;;;91         AddrSize = sizeof(struct sockaddr_in);
0000a4  2010              MOVS     r0,#0x10
0000a6  9006              STR      r0,[sp,#0x18]
;;;92     
;;;93     	for(;;) 
0000a8  bf00              NOP      
                  |L2.170|
;;;94     	{ 
;;;95             iClientHttpFD = accept(iListenHttpFD, (struct sockaddr *)&HttpClientAddr, (unsigned int*)&AddrSize); 
0000aa  aa06              ADD      r2,sp,#0x18
0000ac  4914              LDR      r1,|L2.256|
0000ae  4630              MOV      r0,r6
0000b0  f7fffffe          BL       hf_lwip_accept
0000b4  4605              MOV      r5,r0
;;;96             if(-1 == iClientHttpFD) 
0000b6  f1b53fff          CMP      r5,#0xffffffff
0000ba  d100              BNE      |L2.190|
;;;97     		{ 
;;;98                 continue;
0000bc  e7f5              B        |L2.170|
                  |L2.190|
;;;99     		} 
;;;100            //u_printf("++++++++++++++++++++++++++++++++++++++++++++++\r\n");
;;;101    
;;;102       
;;;103        	recv_num = recv(iClientHttpFD, HttpServerRecvBuf, HTTP_SERVER_RECV_LENGTH, 0);
0000be  2300              MOVS     r3,#0
0000c0  f44f62af          MOV      r2,#0x578
0000c4  490d              LDR      r1,|L2.252|
0000c6  4628              MOV      r0,r5
0000c8  f7fffffe          BL       hf_lwip_recv
0000cc  4604              MOV      r4,r0
;;;104    
;;;105        	if((recv_num)>0) 
0000ce  2c00              CMP      r4,#0
0000d0  dd10              BLE      |L2.244|
;;;106        	{ 
;;;107        	    HttpServerRecvBuf[recv_num] = '\0'; 
0000d2  2000              MOVS     r0,#0
0000d4  4909              LDR      r1,|L2.252|
0000d6  5508              STRB     r0,[r1,r4]
;;;108        	  #if 1
;;;109        	    if(0x00 == hfhttpd_url_callback(HttpServerRecvBuf, HttpServerRecvBuf))
0000d8  4608              MOV      r0,r1
0000da  f7fffffe          BL       hfhttpd_url_callback
0000de  b948              CBNZ     r0,|L2.244|
;;;110        	    {
;;;111    	            send(iClientHttpFD, HttpServerRecvBuf, strlen(HttpServerRecvBuf), 0); 
0000e0  4806              LDR      r0,|L2.252|
0000e2  f7fffffe          BL       strlen
0000e6  4607              MOV      r7,r0
0000e8  2300              MOVS     r3,#0
0000ea  463a              MOV      r2,r7
0000ec  4903              LDR      r1,|L2.252|
0000ee  4628              MOV      r0,r5
0000f0  f7fffffe          BL       lwip_send
                  |L2.244|
;;;112    	        }
;;;113    	      #endif
;;;114        	} 
;;;115    
;;;116            close(iClientHttpFD);
0000f4  4628              MOV      r0,r5
0000f6  f7fffffe          BL       hf_lwip_close
0000fa  e7d6              B        |L2.170|
;;;117       
;;;118    	} 
;;;119    
;;;120    
;;;121    }
;;;122    
                          ENDP

                  |L2.252|
                          DCD      HttpServerRecvBuf
                  |L2.256|
                          DCD      HttpClientAddr

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  HttpServerRecvBuf
                          %        1404
                  HttpClientAddr
                          %        16
