; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\powerstaticsrecord.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\powerstaticsrecord.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\powerstaticsrecord.crf ..\src\PowerStaticsRecord.c]
                          THUMB

                          AREA ||i.PowerRecord_StaticsData||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_sizespec
                  PowerRecord_StaticsData PROC
;;;106    *******************************************************************************/
;;;107    void PowerRecord_StaticsData(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;108    { 
000002  b0a1              SUB      sp,sp,#0x84
;;;109        DevTimeType     *pCurTime;
;;;110        int             iStatisticsPara[PORT_NUM]; 
;;;111        uint8_t i=0,portID = 0;
000004  2500              MOVS     r5,#0
000006  2400              MOVS     r4,#0
;;;112        static int nowTimeStack = 0;
;;;113        char testBuf[100] = {0};
000008  2164              MOVS     r1,#0x64
00000a  a802              ADD      r0,sp,#8
00000c  f7fffffe          BL       __aeabi_memclr4
;;;114            
;;;115        pCurTime  = GetCurTime();
000010  f7fffffe          BL       GetCurTime
000014  4606              MOV      r6,r0
;;;116    
;;;117        if(0x00 != isBitSet(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_9_IS_HOURS_DATA_CMD))
000016  486a              LDR      r0,|L1.448|
000018  8800              LDRH     r0,[r0,#0]  ; FwUpdateStatusObj
00001a  f4107f00          TST      r0,#0x200
                  |L1.30|
00001e  d075              BEQ      |L1.268|
;;;118        {
;;;119        	ClrBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_9_IS_HOURS_DATA_CMD);
000020  4867              LDR      r0,|L1.448|
000022  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000024  f4207000          BIC      r0,r0,#0x200
000028  4965              LDR      r1,|L1.448|
00002a  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;120    
;;;121        	if(readPowerCount >= 10)
00002c  4865              LDR      r0,|L1.452|
00002e  6800              LDR      r0,[r0,#0]  ; readPowerCount
000030  280a              CMP      r0,#0xa
000032  d36b              BCC      |L1.268|
;;;122        	{
;;;123    		
;;;124    #ifdef TEST
;;;125    			nowTimeStack = pCurTime->NowTimeSec;			//test
;;;126    #else
;;;127    	        nowTimeStack = (pCurTime->NowTimeSec+100) - (pCurTime->NowTimeSec+100)%3600;	
000034  6af0              LDR      r0,[r6,#0x2c]
000036  3064              ADDS     r0,r0,#0x64
000038  f44f6161          MOV      r1,#0xe10
00003c  fbb0f2f1          UDIV     r2,r0,r1
000040  fb010112          MLS      r1,r1,r2,r0
000044  6af0              LDR      r0,[r6,#0x2c]
000046  3064              ADDS     r0,r0,#0x64
000048  1a40              SUBS     r0,r0,r1
00004a  495f              LDR      r1,|L1.456|
00004c  6008              STR      r0,[r1,#0]  ; nowTimeStack
;;;128    #endif       
;;;129    	        
;;;130    	        for(portID=0;portID<PORT_NUM;portID++)
00004e  bf00              NOP      
000050  e026              B        |L1.160|
                  |L1.82|
;;;131    	        {
;;;132    	            iStatisticsPara[portID] = TempPowerStaticsSum[portID]/readPowerCount;         //统计该段时间内所用功耗
000052  485e              LDR      r0,|L1.460|
000054  f8500024          LDR      r0,[r0,r4,LSL #2]
000058  495a              LDR      r1,|L1.452|
00005a  6809              LDR      r1,[r1,#0]  ; readPowerCount
00005c  fbb0f0f1          UDIV     r0,r0,r1
000060  a91b              ADD      r1,sp,#0x6c
000062  f8410024          STR      r0,[r1,r4,LSL #2]
;;;133    
;;;134    	            memset(testBuf,0,sizeof(testBuf));
000066  2164              MOVS     r1,#0x64
000068  a802              ADD      r0,sp,#8
00006a  f7fffffe          BL       __aeabi_memclr4
;;;135    	 			sprintf(testBuf,"port[%d]:sumPower=%d\t readPowerCount=%d\n",portID,TempPowerStaticsSum[portID],readPowerCount);
00006e  4855              LDR      r0,|L1.452|
000070  6800              LDR      r0,[r0,#0]  ; readPowerCount
000072  9000              STR      r0,[sp,#0]
000074  4855              LDR      r0,|L1.460|
000076  f8503024          LDR      r3,[r0,r4,LSL #2]
00007a  4622              MOV      r2,r4
00007c  a154              ADR      r1,|L1.464|
00007e  a802              ADD      r0,sp,#8
000080  f7fffffe          BL       __2sprintf
;;;136    				UdpDebugPrint(testBuf,strlen(testBuf));
000084  a802              ADD      r0,sp,#8
000086  f7fffffe          BL       strlen
00008a  4607              MOV      r7,r0
00008c  4639              MOV      r1,r7
00008e  a802              ADD      r0,sp,#8
000090  f7fffffe          BL       UdpDebugPrint
;;;137    	                                      
;;;138    	            TempPowerStaticsSum[portID] = 0;  
000094  2000              MOVS     r0,#0
000096  494d              LDR      r1,|L1.460|
000098  f8410024          STR      r0,[r1,r4,LSL #2]
00009c  1c60              ADDS     r0,r4,#1              ;130
00009e  b2c4              UXTB     r4,r0                 ;130
                  |L1.160|
0000a0  2c06              CMP      r4,#6                 ;130
0000a2  dbd6              BLT      |L1.82|
;;;139    	        }
;;;140    	        readPowerCount = 0;
0000a4  2000              MOVS     r0,#0
0000a6  4947              LDR      r1,|L1.452|
0000a8  6008              STR      r0,[r1,#0]  ; readPowerCount
;;;141    	    
;;;142            	if(DevInfoObj.isCalibrateTime) 
0000aa  4854              LDR      r0,|L1.508|
0000ac  f8900040          LDRB     r0,[r0,#0x40]  ; DevInfoObj
0000b0  2800              CMP      r0,#0
0000b2  d0b4              BEQ      |L1.30|
;;;143    	        {
;;;144    		        if(isBitSet(iStaticsFlag, WIFI_WORK_NORMAL))                          //对时成功且网络正常
0000b4  4852              LDR      r0,|L1.512|
0000b6  7800              LDRB     r0,[r0,#0]  ; iStaticsFlag
0000b8  f0100f02          TST      r0,#2
0000bc  d027              BEQ      |L1.270|
;;;145    		        {
;;;146    		        	for(portID=0;portID<PORT_NUM;portID++)
0000be  2400              MOVS     r4,#0
0000c0  e022              B        |L1.264|
                  |L1.194|
;;;147    		        	{
;;;148    		        		HistoryData.power[portID] = iStatisticsPara[portID]*10;
0000c2  a81b              ADD      r0,sp,#0x6c
0000c4  f8500024          LDR      r0,[r0,r4,LSL #2]
0000c8  eb000080          ADD      r0,r0,r0,LSL #2
0000cc  0041              LSLS     r1,r0,#1
0000ce  484d              LDR      r0,|L1.516|
0000d0  f8401024          STR      r1,[r0,r4,LSL #2]
;;;149    		        		HistoryData.timeStack = nowTimeStack;
0000d4  483c              LDR      r0,|L1.456|
0000d6  6800              LDR      r0,[r0,#0]  ; nowTimeStack
0000d8  494a              LDR      r1,|L1.516|
0000da  1f09              SUBS     r1,r1,#4
0000dc  6008              STR      r0,[r1,#0]  ; HistoryData
;;;150    
;;;151    		        		sprintf(testBuf,"report_data[%d]:power=%d\t timeStack=%d\n",portID,HistoryData.power[portID],HistoryData.timeStack);
0000de  4608              MOV      r0,r1
0000e0  6800              LDR      r0,[r0,#0]  ; HistoryData
0000e2  9000              STR      r0,[sp,#0]
0000e4  1d08              ADDS     r0,r1,#4
0000e6  f8503024          LDR      r3,[r0,r4,LSL #2]
0000ea  4622              MOV      r2,r4
0000ec  a146              ADR      r1,|L1.520|
0000ee  a802              ADD      r0,sp,#8
0000f0  f7fffffe          BL       __2sprintf
;;;152    		            	UdpDebugPrint(testBuf,strlen(testBuf));
0000f4  a802              ADD      r0,sp,#8
0000f6  f7fffffe          BL       strlen
0000fa  4607              MOV      r7,r0
0000fc  4639              MOV      r1,r7
0000fe  a802              ADD      r0,sp,#8
000100  f7fffffe          BL       UdpDebugPrint
000104  1c60              ADDS     r0,r4,#1              ;146
000106  b2c4              UXTB     r4,r0                 ;146
                  |L1.264|
000108  2c06              CMP      r4,#6                 ;146
00010a  dbda              BLT      |L1.194|
                  |L1.268|
00010c  e055              B        |L1.442|
                  |L1.270|
;;;153    		        	}
;;;154    		        }
;;;155    		        else
;;;156    		        {	        	
;;;157    					for(portID=0;portID<PORT_NUM;portID++)
00010e  2400              MOVS     r4,#0
000110  e01c              B        |L1.332|
                  |L1.274|
;;;158    					{
;;;159    						devOffLineData.recordData[devOffLineData.recordCount].power[portID] = iStatisticsPara[portID]*10;
000112  a81b              ADD      r0,sp,#0x6c
000114  f8500024          LDR      r0,[r0,r4,LSL #2]
000118  eb000080          ADD      r0,r0,r0,LSL #2
00011c  0041              LSLS     r1,r0,#1
00011e  4844              LDR      r0,|L1.560|
000120  8800              LDRH     r0,[r0,#0]  ; devOffLineData
000122  ebc002c0          RSB      r2,r0,r0,LSL #3
000126  4842              LDR      r0,|L1.560|
000128  1d00              ADDS     r0,r0,#4
00012a  eb000082          ADD      r0,r0,r2,LSL #2
00012e  1d00              ADDS     r0,r0,#4
000130  f8401024          STR      r1,[r0,r4,LSL #2]
;;;160    						devOffLineData.recordData[devOffLineData.recordCount].timeStack = nowTimeStack; 				
000134  4824              LDR      r0,|L1.456|
000136  6801              LDR      r1,[r0,#0]  ; nowTimeStack
000138  483d              LDR      r0,|L1.560|
00013a  8800              LDRH     r0,[r0,#0]  ; devOffLineData
00013c  ebc002c0          RSB      r2,r0,r0,LSL #3
000140  483b              LDR      r0,|L1.560|
000142  1d00              ADDS     r0,r0,#4
000144  f8401022          STR      r1,[r0,r2,LSL #2]
000148  1c60              ADDS     r0,r4,#1              ;157
00014a  b2c4              UXTB     r4,r0                 ;157
                  |L1.332|
00014c  2c06              CMP      r4,#6                 ;157
00014e  dbe0              BLT      |L1.274|
;;;161    					}
;;;162    					devOffLineData.recordCount++;
000150  4837              LDR      r0,|L1.560|
000152  8800              LDRH     r0,[r0,#0]  ; devOffLineData
000154  1c40              ADDS     r0,r0,#1
000156  4936              LDR      r1,|L1.560|
000158  8008              STRH     r0,[r1,#0]
;;;163    					devOffLineData.recordCount %= RECORD_HOURS;
00015a  4608              MOV      r0,r1
00015c  8800              LDRH     r0,[r0,#0]  ; devOffLineData
00015e  2148              MOVS     r1,#0x48
000160  fb90f2f1          SDIV     r2,r0,r1
000164  fb010012          MLS      r0,r1,r2,r0
000168  4931              LDR      r1,|L1.560|
00016a  8008              STRH     r0,[r1,#0]
;;;164    					surplusRecordCount = devOffLineData.recordCount;
00016c  4608              MOV      r0,r1
00016e  8800              LDRH     r0,[r0,#0]  ; devOffLineData
000170  4930              LDR      r1,|L1.564|
000172  8008              STRH     r0,[r1,#0]
;;;165    
;;;166    					for(i=0;i<devOffLineData.recordCount;i++)
000174  2500              MOVS     r5,#0
000176  e01c              B        |L1.434|
                  |L1.376|
;;;167    		            {
;;;168    		            	sprintf(testBuf,"record_data[%d]:power=%d\t timeStack=%ld\n",i,devOffLineData.recordData[i].power[0],
000178  ebc501c5          RSB      r1,r5,r5,LSL #3
00017c  482c              LDR      r0,|L1.560|
00017e  1d00              ADDS     r0,r0,#4
000180  f8500021          LDR      r0,[r0,r1,LSL #2]
000184  ebc501c5          RSB      r1,r5,r5,LSL #3
000188  9000              STR      r0,[sp,#0]
00018a  4829              LDR      r0,|L1.560|
00018c  1d00              ADDS     r0,r0,#4
00018e  eb000081          ADD      r0,r0,r1,LSL #2
000192  462a              MOV      r2,r5
000194  a128              ADR      r1,|L1.568|
000196  6843              LDR      r3,[r0,#4]
000198  a802              ADD      r0,sp,#8
00019a  f7fffffe          BL       __2sprintf
;;;169    		            						devOffLineData.recordData[i].timeStack);
;;;170    		            	UdpDebugPrint(testBuf,strlen(testBuf));
00019e  a802              ADD      r0,sp,#8
0001a0  f7fffffe          BL       strlen
0001a4  4607              MOV      r7,r0
0001a6  4639              MOV      r1,r7
0001a8  a802              ADD      r0,sp,#8
0001aa  f7fffffe          BL       UdpDebugPrint
0001ae  1c68              ADDS     r0,r5,#1              ;166
0001b0  b2c5              UXTB     r5,r0                 ;166
                  |L1.434|
0001b2  481f              LDR      r0,|L1.560|
0001b4  8800              LDRH     r0,[r0,#0]            ;166  ; devOffLineData
0001b6  42a8              CMP      r0,r5                 ;166
0001b8  dcde              BGT      |L1.376|
                  |L1.442|
;;;171    		            }
;;;172    		    	
;;;173    		        }
;;;174    		    }
;;;175    		}
;;;176        }
;;;177    
;;;178    } 
0001ba  b021              ADD      sp,sp,#0x84
0001bc  bdf0              POP      {r4-r7,pc}
;;;179    
                          ENDP

0001be  0000              DCW      0x0000
                  |L1.448|
                          DCD      FwUpdateStatusObj
                  |L1.452|
                          DCD      readPowerCount
                  |L1.456|
                          DCD      nowTimeStack
                  |L1.460|
                          DCD      TempPowerStaticsSum
                  |L1.464|
0001d0  706f7274          DCB      "port[%d]:sumPower=%d\t readPowerCount=%d\n",0
0001d4  5b25645d
0001d8  3a73756d
0001dc  506f7765
0001e0  723d2564
0001e4  09207265
0001e8  6164506f
0001ec  77657243
0001f0  6f756e74
0001f4  3d25640a
0001f8  00      
0001f9  00                DCB      0
0001fa  00                DCB      0
0001fb  00                DCB      0
                  |L1.508|
                          DCD      DevInfoObj
                  |L1.512|
                          DCD      iStaticsFlag
                  |L1.516|
                          DCD      HistoryData+0x4
                  |L1.520|
000208  7265706f          DCB      "report_data[%d]:power=%d\t timeStack=%d\n",0
00020c  72745f64
000210  6174615b
000214  25645d3a
000218  706f7765
00021c  723d2564
000220  09207469
000224  6d655374
000228  61636b3d
00022c  25640a00
                  |L1.560|
                          DCD      devOffLineData
                  |L1.564|
                          DCD      surplusRecordCount
                  |L1.568|
000238  7265636f          DCB      "record_data[%d]:power=%d\t timeStack=%ld\n",0
00023c  72645f64
000240  6174615b
000244  25645d3a
000248  706f7765
00024c  723d2564
000250  09207469
000254  6d655374
000258  61636b3d
00025c  256c640a
000260  00      
000261  00                DCB      0
000262  00                DCB      0
000263  00                DCB      0

                          AREA ||i.PowerStatics_Init||, CODE, READONLY, ALIGN=2

                  PowerStatics_Init PROC
;;;78     *******************************************************************************/
;;;79     extern void PowerStatics_Init(void) 
000000  b500              PUSH     {lr}
;;;80     { 
000002  b08b              SUB      sp,sp,#0x2c
;;;81         struct tm   iStartTime;  
;;;82         // 2000.01.01,00:00:00 
;;;83         iStartTime.tm_year          = 2000-1900;
000004  2064              MOVS     r0,#0x64
000006  9005              STR      r0,[sp,#0x14]
;;;84         iStartTime.tm_mon           = 0;
000008  2000              MOVS     r0,#0
00000a  9004              STR      r0,[sp,#0x10]
;;;85         iStartTime.tm_mday          = 1;
00000c  2001              MOVS     r0,#1
00000e  9003              STR      r0,[sp,#0xc]
;;;86         iStartTime.tm_hour          = 0;
000010  2000              MOVS     r0,#0
000012  9002              STR      r0,[sp,#8]
;;;87         iStartTime.tm_min           = 0;
000014  9001              STR      r0,[sp,#4]
;;;88         iStartTime.tm_sec           = 0;
000016  9000              STR      r0,[sp,#0]
;;;89         iStartTime.tm_wday          = 6;
000018  2006              MOVS     r0,#6
00001a  9006              STR      r0,[sp,#0x18]
;;;90         iStartTime.tm_isdst         = 0;
00001c  2000              MOVS     r0,#0
00001e  9008              STR      r0,[sp,#0x20]
;;;91         set_rtctime(&iStartTime); 
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       set_rtctime
;;;92        
;;;93         DevInfoObj.isCalibrateTime  = 0x00; 
000026  2000              MOVS     r0,#0
000028  4903              LDR      r1,|L2.56|
00002a  f8810040          STRB     r0,[r1,#0x40]
;;;94         iStaticsFlag                = 0x00; 
00002e  4903              LDR      r1,|L2.60|
000030  7008              STRB     r0,[r1,#0]
;;;95     } 
000032  b00b              ADD      sp,sp,#0x2c
000034  bd00              POP      {pc}
;;;96     
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      DevInfoObj
                  |L2.60|
                          DCD      iStaticsFlag

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TempPowerStaticsSum
                          %        28
                  HistoryData
                          %        28
                  devOffLineData
                          %        2048
                  CurrentDataObj
                          %        120

                          AREA ||.data||, DATA, ALIGN=2

                  iStaticsFlag
000000  00                DCB      0x00
                  hasReportHourData
000001  00                DCB      0x00
                  isReportRTHourSuccess
000002  00                DCB      0x00
                  addReportRtHourMark
000003  00                DCB      0x00
                  totalNoTimeRecord
                          DCD      0x00000000
                  readPowerCount
                          DCD      0x00000000
                  dataID
                          DCD      0x00000000
                  sendRecordCount
000010  0000              DCW      0x0000
                  surplusRecordCount
000012  0000              DCW      0x0000
                  nowTimeStack
                          DCD      0x00000000
