; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\devrule.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\devrule.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\devrule.crf ..\src\DevRule.c]
                          THUMB

                          AREA ||i.CountDownProcess||, CODE, READONLY, ALIGN=2

                  CountDownProcess PROC
;;;148    *******************************************************************************/
;;;149    void CountDownProcess(time_t ArgCurTime)
000000  b570              PUSH     {r4-r6,lr}
;;;150    {
000002  4605              MOV      r5,r0
;;;151        uint8_t i;
;;;152    
;;;153        //u_printf("ArgCurTime=%ld\n",ArgCurTime);
;;;154        
;;;155        for(i=0; i<PORT_NUM; i++)
000004  2400              MOVS     r4,#0
000006  e047              B        |L1.152|
                  |L1.8|
;;;156        {
;;;157            if(CountDownTurnOff[i].isCountDown)
000008  4825              LDR      r0,|L1.160|
00000a  eb001004          ADD      r0,r0,r4,LSL #4
00000e  7800              LDRB     r0,[r0,#0]
000010  b370              CBZ      r0,|L1.112|
;;;158            {
;;;159                 if((ArgCurTime >= CountDownTurnOff[i].StartTimePoint+CountDownTurnOff[i].CountDownValue)&&
000012  4823              LDR      r0,|L1.160|
000014  eb001004          ADD      r0,r0,r4,LSL #4
000018  6840              LDR      r0,[r0,#4]
00001a  4921              LDR      r1,|L1.160|
00001c  eb011104          ADD      r1,r1,r4,LSL #4
000020  68c9              LDR      r1,[r1,#0xc]
000022  4408              ADD      r0,r0,r1
000024  42a8              CMP      r0,r5
000026  d824              BHI      |L1.114|
;;;160                                (ArgCurTime < CountDownTurnOff[i].StartTimePoint+CountDownTurnOff[i].CountDownValue+5))
000028  481d              LDR      r0,|L1.160|
00002a  eb001004          ADD      r0,r0,r4,LSL #4
00002e  6840              LDR      r0,[r0,#4]
000030  491b              LDR      r1,|L1.160|
000032  eb011104          ADD      r1,r1,r4,LSL #4
000036  68c9              LDR      r1,[r1,#0xc]
000038  4408              ADD      r0,r0,r1
00003a  1d40              ADDS     r0,r0,#5
00003c  42a8              CMP      r0,r5
00003e  d918              BLS      |L1.114|
;;;161                {
;;;162                   
;;;163                    CountDownTurnOff[i].isCountDown = 0; 
000040  2000              MOVS     r0,#0
000042  4917              LDR      r1,|L1.160|
000044  eb011104          ADD      r1,r1,r4,LSL #4
000048  7008              STRB     r0,[r1,#0]
;;;164    
;;;165            	    if(CountDownTurnOff[i].onOrOff == 0)
00004a  4815              LDR      r0,|L1.160|
00004c  eb001004          ADD      r0,r0,r4,LSL #4
000050  7840              LDRB     r0,[r0,#1]
000052  b928              CBNZ     r0,|L1.96|
;;;166            	    {
;;;167            	       #if (PORT_NUM == 6)
;;;168                        Switch_TurnOnOff(i+1, 0); 
000054  1c61              ADDS     r1,r4,#1
000056  b2c8              UXTB     r0,r1
000058  2100              MOVS     r1,#0
00005a  f7fffffe          BL       Switch_TurnOnOff
00005e  e004              B        |L1.106|
                  |L1.96|
;;;169                       #elif (PORT_NUM == 1)
;;;170                        Port_TurnOnOff(0);
;;;171    					plug_updata = 1;
;;;172    
;;;173    					//u_printf("devRule.c--328\n");
;;;174                       #endif                    
;;;175                    }
;;;176                    else
;;;177                    {
;;;178                       #if (PORT_NUM == 6)
;;;179                        Switch_TurnOnOff(i+1, 1);
000060  1c61              ADDS     r1,r4,#1
000062  b2c8              UXTB     r0,r1
000064  2101              MOVS     r1,#1
000066  f7fffffe          BL       Switch_TurnOnOff
                  |L1.106|
;;;180                       #elif(PORT_NUM == 1)
;;;181                        Port_TurnOnOff(1);
;;;182    				    plug_updata = 1;
;;;183    
;;;184    					//u_printf("devRule.c--339\n");
;;;185                       #endif
;;;186                    }
;;;187                    SwInformation.portChangeReason = PORT_CHANGE_BY_COUNTDOWN;
00006a  2007              MOVS     r0,#7
00006c  490d              LDR      r1,|L1.164|
00006e  70c8              STRB     r0,[r1,#3]
                  |L1.112|
000070  e010              B        |L1.148|
                  |L1.114|
;;;188                    //UdpDebugPrint("Now excute count down!\r\n",sizeof("Now excute count down!\r\n")-1);
;;;189                }
;;;190                else if(ArgCurTime > CountDownTurnOff[i].StartTimePoint+CountDownTurnOff[i].CountDownValue+5)
000072  480b              LDR      r0,|L1.160|
000074  eb001004          ADD      r0,r0,r4,LSL #4
000078  6840              LDR      r0,[r0,#4]
00007a  4909              LDR      r1,|L1.160|
00007c  eb011104          ADD      r1,r1,r4,LSL #4
000080  68c9              LDR      r1,[r1,#0xc]
000082  4408              ADD      r0,r0,r1
000084  1d40              ADDS     r0,r0,#5
000086  42a8              CMP      r0,r5
000088  d204              BCS      |L1.148|
;;;191                {
;;;192                    CountDownTurnOff[i].isCountDown = 0;
00008a  2000              MOVS     r0,#0
00008c  4904              LDR      r1,|L1.160|
00008e  eb011104          ADD      r1,r1,r4,LSL #4
000092  7008              STRB     r0,[r1,#0]
                  |L1.148|
000094  1c60              ADDS     r0,r4,#1              ;155
000096  b2c4              UXTB     r4,r0                 ;155
                  |L1.152|
000098  2c06              CMP      r4,#6                 ;155
00009a  dbb5              BLT      |L1.8|
;;;193                } 
;;;194    
;;;195                //u_printf("ArgCurTime=%ld,CountDownTurnOff[%d].StartTimePoint=%d delaySec=%d\n",
;;;196                //            ArgCurTime,i,CountDownTurnOff[i].StartTimePoint,CountDownTurnOff[i].CountDownValue);
;;;197            }
;;;198        }
;;;199    }
00009c  bd70              POP      {r4-r6,pc}
;;;200    
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      CountDownTurnOff
                  |L1.164|
                          DCD      SwInformation

                          AREA ||i.GetCountDownInfo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  GetCountDownInfo PROC
;;;485    *******************************************************************************/
;;;486    char *GetCountDownInfo(char *pArgBuf)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;487    {
000004  4607              MOV      r7,r0
;;;488    
;;;489    	int     iLength;
;;;490        char    *pBuf = pArgBuf;
000006  463d              MOV      r5,r7
;;;491        uint8_t i;
;;;492        
;;;493        for(i=0; i<PORT_NUM; i++)  
000008  2400              MOVS     r4,#0
00000a  e01e              B        |L2.74|
                  |L2.12|
;;;494        { 
;;;495    		if(CountDownTurnOff[i].isCountDown)
00000c  4811              LDR      r0,|L2.84|
00000e  eb001004          ADD      r0,r0,r4,LSL #4
000012  7800              LDRB     r0,[r0,#0]
000014  b1b8              CBZ      r0,|L2.70|
;;;496    		{
;;;497    	        iLength = sprintf(pBuf, "{\"port\":%d,"
000016  480f              LDR      r0,|L2.84|
000018  eb001004          ADD      r0,r0,r4,LSL #4
00001c  68c0              LDR      r0,[r0,#0xc]
00001e  490d              LDR      r1,|L2.84|
000020  eb011104          ADD      r1,r1,r4,LSL #4
000024  6889              LDR      r1,[r1,#8]
000026  e9cd1000          STRD     r1,r0,[sp,#0]
00002a  480a              LDR      r0,|L2.84|
00002c  eb001004          ADD      r0,r0,r4,LSL #4
000030  7843              LDRB     r3,[r0,#1]
000032  1c62              ADDS     r2,r4,#1
000034  a108              ADR      r1,|L2.88|
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       __2sprintf
00003c  4606              MOV      r6,r0
;;;498    	                                "\"switch\":%d,"
;;;499    	                                "\"start\":%d,"
;;;500    	                                "\"delay\":%d},",
;;;501    	                                i+1, 
;;;502    	                                CountDownTurnOff[i].onOrOff, 
;;;503    	                                CountDownTurnOff[i].ReceiveStartTime,
;;;504    	                                CountDownTurnOff[i].CountDownValue); 
;;;505    	        pBuf += iLength;
00003e  4435              ADD      r5,r5,r6
;;;506    			pBuf--;                                                                 // 最后一条倒计时无逗号分隔符，故占据最后一条规则后的逗号分隔符的位置。
000040  1e6d              SUBS     r5,r5,#1
;;;507        		*pBuf = '\0';
000042  2000              MOVS     r0,#0
000044  7028              STRB     r0,[r5,#0]
                  |L2.70|
000046  1c60              ADDS     r0,r4,#1              ;493
000048  b2c4              UXTB     r4,r0                 ;493
                  |L2.74|
00004a  2c06              CMP      r4,#6                 ;493
00004c  dbde              BLT      |L2.12|
;;;508    		}
;;;509        } 
;;;510    
;;;511    
;;;512    
;;;513    	//u_printf("countDown buffer:%s\n",pBuf);
;;;514        return pBuf; 
00004e  4628              MOV      r0,r5
;;;515    	
;;;516    }
000050  e8bd81fc          POP      {r2-r8,pc}
;;;517    
                          ENDP

                  |L2.84|
                          DCD      CountDownTurnOff
                  |L2.88|
000058  7b22706f          DCB      "{""port"":%d,""switch"":%d,""start"":%d,""delay"":%d},",0
00005c  7274223a
000060  25642c22
000064  73776974
000068  6368223a
00006c  25642c22
000070  73746172
000074  74223a25
000078  642c2264
00007c  656c6179
000080  223a2564
000084  7d2c00  
000087  00                DCB      0

                          AREA ||i.GetDevRuleInfo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  GetDevRuleInfo PROC
;;;80     *******************************************************************************/
;;;81     char *GetDevRuleInfo(char *pDataBuf,uint8_t pageID) 
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;82     { 
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  460f              MOV      r7,r1
;;;83         int     iLength;
;;;84         char    *pBuf = pDataBuf;
00000a  4646              MOV      r6,r8
;;;85         uint8_t i, validDay,ruleCount;
;;;86     	uint8_t defMode = 0;
00000c  f04f0b00          MOV      r11,#0
;;;87         
;;;88         if(0x00 < DevRuleInfoObj.RuleCount) 
000010  4849              LDR      r0,|L3.312|
000012  7800              LDRB     r0,[r0,#0]  ; DevRuleInfoObj
000014  2800              CMP      r0,#0
000016  dd7d              BLE      |L3.276|
;;;89         { 
;;;90             pBuf = pDataBuf; 
000018  4646              MOV      r6,r8
;;;91     		ruleCount = ((DevRuleInfoObj.RuleCount-pageID*PAGE_COUNT)/PAGE_COUNT>0)?((pageID+1)*PAGE_COUNT):DevRuleInfoObj.RuleCount;
00001a  4847              LDR      r0,|L3.312|
00001c  7800              LDRB     r0,[r0,#0]  ; DevRuleInfoObj
00001e  eb070147          ADD      r1,r7,r7,LSL #1
000022  eba00081          SUB      r0,r0,r1,LSL #2
000026  210c              MOVS     r1,#0xc
000028  fb90f0f1          SDIV     r0,r0,r1
00002c  2800              CMP      r0,#0
00002e  dd04              BLE      |L3.58|
000030  1c78              ADDS     r0,r7,#1
000032  eb000040          ADD      r0,r0,r0,LSL #1
000036  0080              LSLS     r0,r0,#2
000038  e001              B        |L3.62|
                  |L3.58|
00003a  483f              LDR      r0,|L3.312|
00003c  7800              LDRB     r0,[r0,#0]  ; DevRuleInfoObj
                  |L3.62|
00003e  f0000aff          AND      r10,r0,#0xff
;;;92     		
;;;93             for(i=0+pageID*PAGE_COUNT; i<ruleCount; i++) 
000042  eb070047          ADD      r0,r7,r7,LSL #1
000046  2100              MOVS     r1,#0
000048  eb010080          ADD      r0,r1,r0,LSL #2
00004c  b2c4              UXTB     r4,r0
00004e  e06a              B        |L3.294|
                  |L3.80|
;;;94             { 
;;;95                 validDay   = DevRuleInfoObj.SwitchRulePool[i].SwOpDateObj;
000050  4839              LDR      r0,|L3.312|
000052  3008              ADDS     r0,r0,#8
000054  eb001044          ADD      r0,r0,r4,LSL #5
000058  7845              LDRB     r5,[r0,#1]
;;;96                #if(PORT_NUM == 6)
;;;97     			{
;;;98     	            iLength = sprintf(pBuf, "{\"mode\":%d,"
00005a  4837              LDR      r0,|L3.312|
00005c  3008              ADDS     r0,r0,#8
00005e  eb001044          ADD      r0,r0,r4,LSL #5
000062  6940              LDR      r0,[r0,#0x14]
000064  4934              LDR      r1,|L3.312|
000066  3108              ADDS     r1,r1,#8
000068  eb011144          ADD      r1,r1,r4,LSL #5
00006c  6909              LDR      r1,[r1,#0x10]
00006e  4a32              LDR      r2,|L3.312|
000070  3208              ADDS     r2,r2,#8
000072  eb021244          ADD      r2,r2,r4,LSL #5
000076  79d2              LDRB     r2,[r2,#7]
000078  4b2f              LDR      r3,|L3.312|
00007a  3308              ADDS     r3,r3,#8
00007c  eb031344          ADD      r3,r3,r4,LSL #5
000080  799b              LDRB     r3,[r3,#6]
000082  e9cd3205          STRD     r3,r2,[sp,#0x14]
000086  e9cd1007          STRD     r1,r0,[sp,#0x1c]
00008a  482b              LDR      r0,|L3.312|
00008c  3008              ADDS     r0,r0,#8
00008e  eb001044          ADD      r0,r0,r4,LSL #5
000092  7941              LDRB     r1,[r0,#5]
000094  4828              LDR      r0,|L3.312|
000096  3008              ADDS     r0,r0,#8
000098  eb001044          ADD      r0,r0,r4,LSL #5
00009c  7902              LDRB     r2,[r0,#4]
00009e  4826              LDR      r0,|L3.312|
0000a0  3008              ADDS     r0,r0,#8
0000a2  eb001044          ADD      r0,r0,r4,LSL #5
0000a6  78c0              LDRB     r0,[r0,#3]
0000a8  4b23              LDR      r3,|L3.312|
0000aa  3308              ADDS     r3,r3,#8
0000ac  eb031344          ADD      r3,r3,r4,LSL #5
0000b0  789b              LDRB     r3,[r3,#2]
0000b2  e9cd3001          STRD     r3,r0,[sp,#4]
0000b6  e9cd2103          STRD     r2,r1,[sp,#0xc]
0000ba  481f              LDR      r0,|L3.312|
0000bc  3008              ADDS     r0,r0,#8
0000be  eb001044          ADD      r0,r0,r4,LSL #5
0000c2  f9900000          LDRSB    r0,[r0,#0]
0000c6  9000              STR      r0,[sp,#0]
0000c8  481b              LDR      r0,|L3.312|
0000ca  3008              ADDS     r0,r0,#8
0000cc  eb001044          ADD      r0,r0,r4,LSL #5
0000d0  465a              MOV      r2,r11
0000d2  491a              LDR      r1,|L3.316|
0000d4  69c3              LDR      r3,[r0,#0x1c]
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       __2sprintf
0000dc  4681              MOV      r9,r0
;;;99     	            						"\"id\":%d,"
;;;100    	                                    "\"en\":%d,"
;;;101    	                                    "\"port\":[%d,%d,%d,%d,%d,%d],"
;;;102    	                                    "\"day\":%d,"
;;;103    	                                    "\"time\":%d,",
;;;104    	                                    defMode,
;;;105    	                                    DevRuleInfoObj.SwitchRulePool[i].RuleID, 
;;;106    	                                    DevRuleInfoObj.SwitchRulePool[i].RuleEnable, 
;;;107    	                                    DevRuleInfoObj.SwitchRulePool[i].PortArr[0],DevRuleInfoObj.SwitchRulePool[i].PortArr[1],
;;;108    	                                    DevRuleInfoObj.SwitchRulePool[i].PortArr[2],DevRuleInfoObj.SwitchRulePool[i].PortArr[3],
;;;109    	                                    DevRuleInfoObj.SwitchRulePool[i].PortArr[4],DevRuleInfoObj.SwitchRulePool[i].PortArr[5],
;;;110    	                                    DevRuleInfoObj.SwitchRulePool[i].CurTimeStamp,DevRuleInfoObj.SwitchRulePool[i].timeLong); 
;;;111    			}
;;;112    		   #elif(PORT_NUM == 1)
;;;113    			{
;;;114    				iLength = sprintf(pBuf, "{\"mode\":%d,"
;;;115    	            						"\"id\":%d,"
;;;116    	                                    "\"en\":%d,"
;;;117    	                                    "\"port\":[%d],"
;;;118    	                                    "\"day\":%d,"
;;;119    	                                    "\"time\":%d,",
;;;120    	                                    defMode,
;;;121    	                                    DevRuleInfoObj.SwitchRulePool[i].RuleID, 
;;;122    	                                    DevRuleInfoObj.SwitchRulePool[i].RuleEnable, 
;;;123    	                                    DevRuleInfoObj.SwitchRulePool[i].PortArr[0],
;;;124    	                                    DevRuleInfoObj.SwitchRulePool[i].CurTimeStamp,DevRuleInfoObj.SwitchRulePool[i].timeLong); 
;;;125    			}
;;;126    		   #endif
;;;127                pBuf += iLength;
0000de  444e              ADD      r6,r6,r9
;;;128              
;;;129                iLength = sprintf(pBuf, "\"week\":[%d,%d,%d,%d,%d,%d,%d]},", 
0000e0  2001              MOVS     r0,#1
0000e2  ea0010a5          AND      r0,r0,r5,ASR #6
0000e6  2101              MOVS     r1,#1
0000e8  ea011165          AND      r1,r1,r5,ASR #5
0000ec  2201              MOVS     r2,#1
0000ee  ea021225          AND      r2,r2,r5,ASR #4
0000f2  2301              MOVS     r3,#1
0000f4  ea0303e5          AND      r3,r3,r5,ASR #3
0000f8  e9cd3201          STRD     r3,r2,[sp,#4]
0000fc  e9cd1003          STRD     r1,r0,[sp,#0xc]
000100  2001              MOVS     r0,#1
000102  ea0000a5          AND      r0,r0,r5,ASR #2
000106  9000              STR      r0,[sp,#0]
000108  2001              MOVS     r0,#1
00010a  ea000365          AND      r3,r0,r5,ASR #1
00010e  f0050201          AND      r2,r5,#1
000112  e000              B        |L3.278|
                  |L3.276|
000114  e00c              B        |L3.304|
                  |L3.278|
000116  a10a              ADR      r1,|L3.320|
000118  4630              MOV      r0,r6
00011a  f7fffffe          BL       __2sprintf
00011e  4681              MOV      r9,r0
;;;130                                        (0x01&(validDay>>0)), (0x01&(validDay>>1)), (0x01&(validDay>>2)), 
;;;131                                        (0x01&(validDay>>3)), (0x01&(validDay>>4)), (0x01&(validDay>>5)), 
;;;132                                        (0x01&(validDay>>6))); 
;;;133                pBuf += iLength; 
000120  444e              ADD      r6,r6,r9
000122  1c60              ADDS     r0,r4,#1              ;93
000124  b2c4              UXTB     r4,r0                 ;93
                  |L3.294|
000126  4554              CMP      r4,r10                ;93
000128  db92              BLT      |L3.80|
;;;134            }
;;;135            pBuf--;                                                                 // 最后一条规则无逗号分隔符，故占据最后一条规则后的逗号分隔符的位置。
00012a  1e76              SUBS     r6,r6,#1
;;;136            *pBuf = '\0';
00012c  2000              MOVS     r0,#0
00012e  7030              STRB     r0,[r6,#0]
                  |L3.304|
;;;137        } 
;;;138        return pBuf; 
000130  4630              MOV      r0,r6
;;;139    } 
000132  b009              ADD      sp,sp,#0x24
000134  e8bd8ff0          POP      {r4-r11,pc}
;;;140    
                          ENDP

                  |L3.312|
                          DCD      DevRuleInfoObj
                  |L3.316|
                          DCD      ||.constdata||
                  |L3.320|
000140  22776565          DCB      """week"":[%d,%d,%d,%d,%d,%d,%d]},",0
000144  6b223a5b
000148  25642c25
00014c  642c2564
000150  2c25642c
000154  25642c25
000158  642c2564
00015c  5d7d2c00

                          AREA ||i.ModifyDevName||, CODE, READONLY, ALIGN=2

                  ModifyDevName PROC
;;;208    *******************************************************************************/ 
;;;209    uint8_t ModifyDevName(char *pCharArg)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;210    {   
000004  4680              MOV      r8,r0
;;;211    	cJSON   *json;
;;;212    	char    *name; 
;;;213    	int     name_len,iLength; 
;;;214    	uint8_t portID,iRet; 
;;;215        
;;;216    	iRet = FAILED;	
000006  f04f0a01          MOV      r10,#1
;;;217    	json = cJSON_Parse(pCharArg); 
00000a  4640              MOV      r0,r8
00000c  f7fffffe          BL       cJSON_Parse
000010  4607              MOV      r7,r0
;;;218    	if(json) 
000012  2f00              CMP      r7,#0
000014  d038              BEQ      |L4.136|
;;;219        {       
;;;220            portID     = cJSON_GetObjectItem(json, "port")->valueint;
000016  a11e              ADR      r1,|L4.144|
000018  4638              MOV      r0,r7
00001a  f7fffffe          BL       cJSON_GetObjectItem
00001e  7d04              LDRB     r4,[r0,#0x14]
;;;221    		name     = cJSON_GetObjectItem(json, "name")->valuestring; 
000020  a11d              ADR      r1,|L4.152|
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       cJSON_GetObjectItem
000028  6905              LDR      r5,[r0,#0x10]
;;;222    		name_len = strlen(name); 
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       strlen
000030  4606              MOV      r6,r0
;;;223    		iLength  = (name_len > NAME_LENGTH)?(NAME_LENGTH):(name_len); 
000032  2e0f              CMP      r6,#0xf
000034  dd01              BLE      |L4.58|
000036  200f              MOVS     r0,#0xf
000038  e000              B        |L4.60|
                  |L4.58|
00003a  4630              MOV      r0,r6
                  |L4.60|
00003c  4681              MOV      r9,r0
;;;224          #if(PORT_NUM == 6)
;;;225    		if(0 == portID)
00003e  b94c              CBNZ     r4,|L4.84|
;;;226    		{
;;;227    		    memset(DevInfoObj.dev_name, 0, NAME_LENGTH); 
000040  210f              MOVS     r1,#0xf
000042  4817              LDR      r0,|L4.160|
000044  f7fffffe          BL       __aeabi_memclr
;;;228    		    memcpy(DevInfoObj.dev_name, name, iLength); 
000048  464a              MOV      r2,r9
00004a  4629              MOV      r1,r5
00004c  4814              LDR      r0,|L4.160|
00004e  f7fffffe          BL       __aeabi_memcpy
000052  e012              B        |L4.122|
                  |L4.84|
;;;229    		}
;;;230    		else
;;;231    		{
;;;232        		memset(SwInformation.PortInfor[portID-1].name, 0, NAME_LENGTH); 
000054  1e61              SUBS     r1,r4,#1
000056  eb010281          ADD      r2,r1,r1,LSL #2
00005a  4912              LDR      r1,|L4.164|
00005c  eb010082          ADD      r0,r1,r2,LSL #2
000060  210f              MOVS     r1,#0xf
000062  f7fffffe          BL       __aeabi_memclr4
;;;233        		memcpy(SwInformation.PortInfor[portID-1].name, name, iLength); 
000066  1e61              SUBS     r1,r4,#1
000068  eb010281          ADD      r2,r1,r1,LSL #2
00006c  490d              LDR      r1,|L4.164|
00006e  eb010082          ADD      r0,r1,r2,LSL #2
000072  464a              MOV      r2,r9
000074  4629              MOV      r1,r5
000076  f7fffffe          BL       __aeabi_memcpy
                  |L4.122|
;;;234    
;;;235        		//u_printf("PortInfor[%d].name=%s\n",portID-1,SwInformation.PortInfor[portID-1].name);
;;;236            }
;;;237          #elif(PORT_NUM == 1)
;;;238            memset(DevInfoObj.dev_name, 0, NAME_LENGTH); 
;;;239    	    memcpy(DevInfoObj.dev_name, name, iLength); 
;;;240    	  #endif
;;;241            WriteDevName();
00007a  f7fffffe          BL       WriteDevName
;;;242    
;;;243    		iRet     = PASSED;
00007e  f04f0a00          MOV      r10,#0
;;;244    //		PublicServer_SyncBaseInfoWithServer();
;;;245    		    
;;;246    		cJSON_Delete(json); 
000082  4638              MOV      r0,r7
000084  f7fffffe          BL       cJSON_Delete
                  |L4.136|
;;;247    
;;;248            //u_printf("DevInfoObj.dev_name=%s\n",DevInfoObj.dev_name);
;;;249    		
;;;250    	} 
;;;251        return iRet;
000088  4650              MOV      r0,r10
;;;252    }
00008a  e8bd87f0          POP      {r4-r10,pc}
;;;253    
                          ENDP

00008e  0000              DCW      0x0000
                  |L4.144|
000090  706f7274          DCB      "port",0
000094  00      
000095  00                DCB      0
000096  00                DCB      0
000097  00                DCB      0
                  |L4.152|
000098  6e616d65          DCB      "name",0
00009c  00      
00009d  00                DCB      0
00009e  00                DCB      0
00009f  00                DCB      0
                  |L4.160|
                          DCD      DevInfoObj+0x25
                  |L4.164|
                          DCD      SwInformation+0x8

                          AREA ||i.Port_TurnOnOff||, CODE, READONLY, ALIGN=2

                  Port_TurnOnOff PROC
;;;604    extern uint8_t iSaveSwStateCount;
;;;605    void Port_TurnOnOff( uint8_t state)
000000  2100              MOVS     r1,#0
;;;606    {
;;;607    	#if !defined(ZX_DETECT)
;;;608            if(state)
;;;609            {
;;;610                hfgpio_fset_out_high(SwitchPinArr[0]);               // On 
;;;611            }
;;;612            else
;;;613            {
;;;614                hfgpio_fset_out_low(SwitchPinArr[0]);                // Off 
;;;615            }
;;;616    	#endif
;;;617    	
;;;618            iSaveSwStateCount = 0x00; 
000002  4a09              LDR      r2,|L5.40|
000004  7011              STRB     r1,[r2,#0]
;;;619        	
;;;620            SwInformation.PortInfor[0].OldStatus      = SwInformation.PortInfor[0].CurStatus;
000006  4909              LDR      r1,|L5.44|
000008  7e0a              LDRB     r2,[r1,#0x18]
00000a  75ca              STRB     r2,[r1,#0x17]
;;;621            SwInformation.PortInfor[0].CurStatus      = state;
00000c  7608              STRB     r0,[r1,#0x18]
;;;622            SwInformation.PortInfor[0].OnOffStatus    = SwInformation.PortInfor[0].CurStatus;
00000e  7e0a              LDRB     r2,[r1,#0x18]
000010  764a              STRB     r2,[r1,#0x19]
;;;623    
;;;624            plug_updata = 1;
000012  2101              MOVS     r1,#1
000014  4a06              LDR      r2,|L5.48|
000016  7011              STRB     r1,[r2,#0]
;;;625    
;;;626    		
;;;627            SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);          //上报当前状态    
000018  4906              LDR      r1,|L5.52|
00001a  6809              LDR      r1,[r1,#0]  ; FwUpdateStatusObj
00001c  f4417180          ORR      r1,r1,#0x100
000020  4a04              LDR      r2,|L5.52|
000022  6011              STR      r1,[r2,#0]  ; FwUpdateStatusObj
;;;628    		//UdpDebugPrint("Port_TurnOnOff,DevRule.c 688 line!\r\n", sizeof("Port_TurnOnOff,DevRule.c 688 line!\r\n")-1);
;;;629    		//u_printf("Now we control the port!!!!!\n");
;;;630    }
000024  4770              BX       lr
;;;631    
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      iSaveSwStateCount
                  |L5.44|
                          DCD      SwInformation
                  |L5.48|
                          DCD      plug_updata
                  |L5.52|
                          DCD      FwUpdateStatusObj

                          AREA ||i.SetPortState||, CODE, READONLY, ALIGN=2

                  SetPortState PROC
;;;527    *******************************************************************************/ 
;;;528    void SetPortState(uint8_t portID,uint8_t onOffState)
000000  b530              PUSH     {r4,r5,lr}
;;;529    {
000002  4602              MOV      r2,r0
;;;530        uint8_t i=0;
000004  2000              MOVS     r0,#0
;;;531        
;;;532        if(0x00 != portID)
000006  b31a              CBZ      r2,|L6.80|
;;;533        {
;;;534            
;;;535            SwInformation.PortInfor[portID-1].OldStatus      = SwInformation.PortInfor[portID-1].CurStatus;
000008  1e53              SUBS     r3,r2,#1
00000a  eb030483          ADD      r4,r3,r3,LSL #2
00000e  4b38              LDR      r3,|L6.240|
000010  eb030384          ADD      r3,r3,r4,LSL #2
000014  7c1c              LDRB     r4,[r3,#0x10]
000016  1e53              SUBS     r3,r2,#1
000018  eb030583          ADD      r5,r3,r3,LSL #2
00001c  4b34              LDR      r3,|L6.240|
00001e  eb030385          ADD      r3,r3,r5,LSL #2
000022  73dc              STRB     r4,[r3,#0xf]
;;;536            SwInformation.PortInfor[portID-1].CurStatus      = onOffState;
000024  1e53              SUBS     r3,r2,#1
000026  eb030483          ADD      r4,r3,r3,LSL #2
00002a  4b31              LDR      r3,|L6.240|
00002c  eb030384          ADD      r3,r3,r4,LSL #2
000030  7419              STRB     r1,[r3,#0x10]
;;;537            SwInformation.PortInfor[portID-1].OnOffStatus    = SwInformation.PortInfor[portID-1].CurStatus;
000032  1e53              SUBS     r3,r2,#1
000034  eb030483          ADD      r4,r3,r3,LSL #2
000038  4b2d              LDR      r3,|L6.240|
00003a  eb030384          ADD      r3,r3,r4,LSL #2
00003e  7c1c              LDRB     r4,[r3,#0x10]
000040  1e53              SUBS     r3,r2,#1
000042  eb030583          ADD      r5,r3,r3,LSL #2
000046  4b2a              LDR      r3,|L6.240|
000048  eb030385          ADD      r3,r3,r5,LSL #2
00004c  745c              STRB     r4,[r3,#0x11]
00004e  e023              B        |L6.152|
                  |L6.80|
;;;538        }
;;;539        else
;;;540        {
;;;541            for(i=0;i<PORT_NUM;i++)
000050  2000              MOVS     r0,#0
000052  e01f              B        |L6.148|
                  |L6.84|
;;;542            {
;;;543                SwInformation.PortInfor[i].OldStatus      = SwInformation.PortInfor[i].CurStatus;
000054  eb000480          ADD      r4,r0,r0,LSL #2
000058  4b25              LDR      r3,|L6.240|
00005a  eb030384          ADD      r3,r3,r4,LSL #2
00005e  7c1c              LDRB     r4,[r3,#0x10]
000060  eb000580          ADD      r5,r0,r0,LSL #2
000064  4b22              LDR      r3,|L6.240|
000066  eb030385          ADD      r3,r3,r5,LSL #2
00006a  73dc              STRB     r4,[r3,#0xf]
;;;544                SwInformation.PortInfor[i].CurStatus      = onOffState;
00006c  eb000480          ADD      r4,r0,r0,LSL #2
000070  4b1f              LDR      r3,|L6.240|
000072  eb030384          ADD      r3,r3,r4,LSL #2
000076  7419              STRB     r1,[r3,#0x10]
;;;545                SwInformation.PortInfor[i].OnOffStatus    = SwInformation.PortInfor[i].CurStatus;
000078  eb000480          ADD      r4,r0,r0,LSL #2
00007c  4b1c              LDR      r3,|L6.240|
00007e  eb030384          ADD      r3,r3,r4,LSL #2
000082  7c1c              LDRB     r4,[r3,#0x10]
000084  eb000580          ADD      r5,r0,r0,LSL #2
000088  4b19              LDR      r3,|L6.240|
00008a  eb030385          ADD      r3,r3,r5,LSL #2
00008e  745c              STRB     r4,[r3,#0x11]
000090  1c43              ADDS     r3,r0,#1              ;541
000092  b2d8              UXTB     r0,r3                 ;541
                  |L6.148|
000094  2806              CMP      r0,#6                 ;541
000096  dbdd              BLT      |L6.84|
                  |L6.152|
;;;546            }
;;;547        }
;;;548    
;;;549        for(i=0;i<PORT_NUM;i++)
000098  2000              MOVS     r0,#0
00009a  e025              B        |L6.232|
                  |L6.156|
;;;550        {
;;;551            if(SwInformation.PortInfor[i].OnOffStatus)
00009c  eb000480          ADD      r4,r0,r0,LSL #2
0000a0  4b13              LDR      r3,|L6.240|
0000a2  eb030384          ADD      r3,r3,r4,LSL #2
0000a6  7c5b              LDRB     r3,[r3,#0x11]
0000a8  b163              CBZ      r3,|L6.196|
;;;552            {
;;;553                SwOnOffData |= SwInformation.PortInfor[i].OnOffStatus<<i;
0000aa  eb000480          ADD      r4,r0,r0,LSL #2
0000ae  4b10              LDR      r3,|L6.240|
0000b0  eb030384          ADD      r3,r3,r4,LSL #2
0000b4  7c5b              LDRB     r3,[r3,#0x11]
0000b6  4083              LSLS     r3,r3,r0
0000b8  4c0e              LDR      r4,|L6.244|
0000ba  7824              LDRB     r4,[r4,#0]  ; SwOnOffData
0000bc  4323              ORRS     r3,r3,r4
0000be  4c0d              LDR      r4,|L6.244|
0000c0  7023              STRB     r3,[r4,#0]
0000c2  e00f              B        |L6.228|
                  |L6.196|
;;;554            }
;;;555            else
;;;556            {
;;;557                SwOnOffData &= ~((!SwInformation.PortInfor[i].OnOffStatus)<<i);
0000c4  eb000480          ADD      r4,r0,r0,LSL #2
0000c8  4b09              LDR      r3,|L6.240|
0000ca  eb030384          ADD      r3,r3,r4,LSL #2
0000ce  7c5b              LDRB     r3,[r3,#0x11]
0000d0  b90b              CBNZ     r3,|L6.214|
0000d2  2301              MOVS     r3,#1
0000d4  e000              B        |L6.216|
                  |L6.214|
0000d6  2300              MOVS     r3,#0
                  |L6.216|
0000d8  4083              LSLS     r3,r3,r0
0000da  4c06              LDR      r4,|L6.244|
0000dc  7824              LDRB     r4,[r4,#0]  ; SwOnOffData
0000de  439c              BICS     r4,r4,r3
0000e0  4b04              LDR      r3,|L6.244|
0000e2  701c              STRB     r4,[r3,#0]
                  |L6.228|
0000e4  1c43              ADDS     r3,r0,#1              ;549
0000e6  b2d8              UXTB     r0,r3                 ;549
                  |L6.232|
0000e8  2806              CMP      r0,#6                 ;549
0000ea  dbd7              BLT      |L6.156|
;;;558            }
;;;559        }
;;;560    
;;;561       // u_printf("SwOnOffData = %d\n",SwOnOffData);
;;;562    }
0000ec  bd30              POP      {r4,r5,pc}
;;;563    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L6.240|
                          DCD      SwInformation+0x8
                  |L6.244|
                          DCD      SwOnOffData

                          AREA ||i.Switch_Ctl||, CODE, READONLY, ALIGN=2

                  Switch_Ctl PROC
;;;260    *******************************************************************************/ 
;;;261    uint8_t Switch_Ctl(char *pBuf)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;262    {
000004  4607              MOV      r7,r0
;;;263    	cJSON   *json;
;;;264    	int     state;
;;;265        int     port;
;;;266    	uint8_t iRet;
;;;267    	
;;;268        //u_printf("Onoff pBuf = %s\n",pBuf);
;;;269        // UdpDebugPrint("Now report OnOff CMD\r\n", strlen("Now report OnOff CMD\r\n"));
;;;270        // UdpDebugPrint(pBuf, strlen(pBuf));    
;;;271        
;;;272    	iRet = FAILED;
000006  f04f0801          MOV      r8,#1
;;;273    	json = cJSON_Parse(pBuf);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       cJSON_Parse
000010  4606              MOV      r6,r0
;;;274    	
;;;275    	if(json)
000012  2e00              CMP      r6,#0
000014  d02b              BEQ      |L7.110|
;;;276    	{
;;;277    		state = cJSON_GetObjectItem(json,"state")->valueint;
000016  a117              ADR      r1,|L7.116|
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       cJSON_GetObjectItem
00001e  6945              LDR      r5,[r0,#0x14]
;;;278            port  = cJSON_GetObjectItem(json,"port")->valueint;
000020  a116              ADR      r1,|L7.124|
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       cJSON_GetObjectItem
000028  6944              LDR      r4,[r0,#0x14]
;;;279            
;;;280    		cJSON_Delete(json);
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       cJSON_Delete
;;;281    
;;;282    		
;;;283    		orderArray[3].OrderMark = 1;
000030  2001              MOVS     r0,#1
000032  4914              LDR      r1,|L7.132|
000034  7248              STRB     r0,[r1,#9]
;;;284           
;;;285    		if(state == 0)
000036  b95d              CBNZ     r5,|L7.80|
;;;286    		{
;;;287    		   #if(PORT_NUM == 6)
;;;288    		    PowerRecordObj[port].record_ValidPower = 0;
000038  2000              MOVS     r0,#0
00003a  ebc401c4          RSB      r1,r4,r4,LSL #3
00003e  4a12              LDR      r2,|L7.136|
000040  eb020181          ADD      r1,r2,r1,LSL #2
000044  6148              STR      r0,[r1,#0x14]
;;;289    		    PowerRecordObj[port].record_ValidCurrent = 0;
000046  ebc401c4          RSB      r1,r4,r4,LSL #3
00004a  eb020181          ADD      r1,r2,r1,LSL #2
00004e  6048              STR      r0,[r1,#4]
                  |L7.80|
;;;290    		   #elif(PORT_NUM == 1)
;;;291    		    PowerRecordObj[0].record_ValidPower = 0;
;;;292    		    PowerRecordObj[0].record_ValidCurrent = 0;
;;;293    		   #endif
;;;294    		}
;;;295    	   #if (PORT_NUM == 6)
;;;296    	    Switch_TurnOnOff(port, state);
000050  b2e9              UXTB     r1,r5
000052  b2e0              UXTB     r0,r4
000054  f7fffffe          BL       Switch_TurnOnOff
;;;297    	   #elif (PORT_NUM == 1)
;;;298    	    Port_TurnOnOff(state);
;;;299    	   	#if defined(ZX_DETECT)
;;;300    	    plug_updata = 1;
;;;301    		#endif
;;;302    
;;;303    		//u_printf("devRule.c--461\n");
;;;304    		
;;;305    	   #endif
;;;306    
;;;307    		iRet = PASSED;
000058  f04f0800          MOV      r8,#0
;;;308    		SwInformation.portChangeReason = PORT_CHANGE_BY_SERVER;
00005c  2001              MOVS     r0,#1
00005e  490b              LDR      r1,|L7.140|
000060  70c8              STRB     r0,[r1,#3]
;;;309            
;;;310            SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);          //上报当前状态    
000062  480b              LDR      r0,|L7.144|
000064  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000066  f4407080          ORR      r0,r0,#0x100
00006a  4909              LDR      r1,|L7.144|
00006c  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
                  |L7.110|
;;;311    		//u_printf("After:state=%d port=%d\n",state,port);
;;;312    		//UdpDebugPrint("Now excute Switch_Ctl,DevRule.c 445 line!\r\n",sizeof("Now excute Switch_Ctl,DevRule.c 445 line!\r\n")-1);
;;;313    	}
;;;314    	
;;;315    	return iRet;
00006e  4640              MOV      r0,r8
;;;316    
;;;317    }
000070  e8bd81f0          POP      {r4-r8,pc}
;;;318    
                          ENDP

                  |L7.116|
000074  73746174          DCB      "state",0
000078  6500    
00007a  00                DCB      0
00007b  00                DCB      0
                  |L7.124|
00007c  706f7274          DCB      "port",0
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L7.132|
                          DCD      orderArray
                  |L7.136|
                          DCD      PowerRecordObj
                  |L7.140|
                          DCD      SwInformation
                  |L7.144|
                          DCD      FwUpdateStatusObj

                          AREA ||i.Switch_RelatedCtl||, CODE, READONLY, ALIGN=2

                  Switch_RelatedCtl PROC
;;;326    *******************************************************************************/ 
;;;327    uint8_t Switch_RelatedCtl(char *pBuf)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;328    {
000004  4681              MOV      r9,r0
;;;329    	cJSON   *json,*port,*after;
;;;330    	uint8_t port_num,iRet,i;
;;;331    	uint8_t state = 0;
000006  2500              MOVS     r5,#0
;;;332    
;;;333    	//char testBuf[100];
;;;334        //u_printf("Onoff pBuf = %s\n",pBuf);
;;;335        // UdpDebugPrint("Now report OnOff CMD\r\n", strlen("Now report OnOff CMD\r\n"));
;;;336        // UdpDebugPrint(pBuf, strlen(pBuf));
;;;337        
;;;338    	iRet = FAILED;
000008  f04f0a01          MOV      r10,#1
;;;339    	json = cJSON_Parse(pBuf);
00000c  4648              MOV      r0,r9
00000e  f7fffffe          BL       cJSON_Parse
000012  4607              MOV      r7,r0
;;;340    	
;;;341    	if(json)
000014  2f00              CMP      r7,#0
000016  d07d              BEQ      |L8.276|
;;;342    	{
;;;343    		port        = cJSON_GetObjectItem(json, "state");
000018  a14b              ADR      r1,|L8.328|
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       cJSON_GetObjectItem
000020  4683              MOV      r11,r0
;;;344    		port_num    = cJSON_GetArraySize(port);	
000022  4658              MOV      r0,r11
000024  f7fffffe          BL       cJSON_GetArraySize
000028  f00008ff          AND      r8,r0,#0xff
;;;345    
;;;346    		for(i=0; i<port_num; i++)
00002c  2400              MOVS     r4,#0
00002e  e01a              B        |L8.102|
                  |L8.48|
;;;347    		{
;;;348    			if((cJSON_GetArrayItem(port,i)->valueint) != 2)
000030  4621              MOV      r1,r4
000032  4658              MOV      r0,r11
000034  f7fffffe          BL       cJSON_GetArrayItem
000038  6940              LDR      r0,[r0,#0x14]
00003a  2802              CMP      r0,#2
00003c  d008              BEQ      |L8.80|
;;;349    			{
;;;350    				state |= ((cJSON_GetArrayItem(port,i)->valueint)<<i);
00003e  4621              MOV      r1,r4
000040  4658              MOV      r0,r11
000042  f7fffffe          BL       cJSON_GetArrayItem
000046  7d00              LDRB     r0,[r0,#0x14]
000048  40a0              LSLS     r0,r0,r4
00004a  4328              ORRS     r0,r0,r5
00004c  b2c5              UXTB     r5,r0
00004e  e008              B        |L8.98|
                  |L8.80|
;;;351    			}
;;;352    			else
;;;353    			{
;;;354    				state |= SwInformation.PortInfor[i].OnOffStatus<<i;
000050  eb040184          ADD      r1,r4,r4,LSL #2
000054  483e              LDR      r0,|L8.336|
000056  eb000081          ADD      r0,r0,r1,LSL #2
00005a  7c40              LDRB     r0,[r0,#0x11]
00005c  40a0              LSLS     r0,r0,r4
00005e  4328              ORRS     r0,r0,r5
000060  b2c5              UXTB     r5,r0
                  |L8.98|
000062  1c60              ADDS     r0,r4,#1              ;346
000064  b2c4              UXTB     r4,r0                 ;346
                  |L8.102|
000066  4544              CMP      r4,r8                 ;346
000068  dbe2              BLT      |L8.48|
;;;355    			}
;;;356    			
;;;357    			//u_printf("rule[%d]:day[%d] = %d\n",ruleID,j,cJSON_GetArrayItem(week,j)->valueint);
;;;358    		}
;;;359    
;;;360    		after = cJSON_GetObjectItem(json, "after");
00006a  a13a              ADR      r1,|L8.340|
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       cJSON_GetObjectItem
000072  4606              MOV      r6,r0
;;;361    		if(!after)
000074  b91e              CBNZ     r6,|L8.126|
;;;362    		{
;;;363    			RelatedCtrl.delayTime = 0;
000076  2000              MOVS     r0,#0
000078  4938              LDR      r1,|L8.348|
00007a  6048              STR      r0,[r1,#4]  ; RelatedCtrl
00007c  e006              B        |L8.140|
                  |L8.126|
;;;364    		}
;;;365    		else
;;;366    		{
;;;367    			RelatedCtrl.delayTime = cJSON_GetObjectItem(json,"after")->valueint;
00007e  a135              ADR      r1,|L8.340|
000080  4638              MOV      r0,r7
000082  f7fffffe          BL       cJSON_GetObjectItem
000086  6940              LDR      r0,[r0,#0x14]
000088  4934              LDR      r1,|L8.348|
00008a  6048              STR      r0,[r1,#4]  ; RelatedCtrl
                  |L8.140|
;;;368    		}
;;;369    		
;;;370    		//RelatedCtrl.delayTime = cJSON_GetObjectItem(json,"after")->valueint;
;;;371    		RelatedCtrl.holdTime = cJSON_GetObjectItem(json,"delay")->valueint;
00008c  a134              ADR      r1,|L8.352|
00008e  4638              MOV      r0,r7
000090  f7fffffe          BL       cJSON_GetObjectItem
000094  6940              LDR      r0,[r0,#0x14]
000096  4931              LDR      r1,|L8.348|
000098  6088              STR      r0,[r1,#8]  ; RelatedCtrl
;;;372            
;;;373    		cJSON_Delete(json);
00009a  4638              MOV      r0,r7
00009c  f7fffffe          BL       cJSON_Delete
;;;374    		
;;;375    	   #if(PORT_NUM == 6)
;;;376    	   	for(i=0;i<PORT_NUM;i++)
0000a0  2400              MOVS     r4,#0
0000a2  e025              B        |L8.240|
                  |L8.164|
;;;377    	    {
;;;378    	        if(SwInformation.PortInfor[i].OnOffStatus)
0000a4  eb040184          ADD      r1,r4,r4,LSL #2
0000a8  4829              LDR      r0,|L8.336|
0000aa  eb000081          ADD      r0,r0,r1,LSL #2
0000ae  7c40              LDRB     r0,[r0,#0x11]
0000b0  b160              CBZ      r0,|L8.204|
;;;379    	        {
;;;380    	            SwOnOffData |= SwInformation.PortInfor[i].OnOffStatus<<i;
0000b2  eb040184          ADD      r1,r4,r4,LSL #2
0000b6  4826              LDR      r0,|L8.336|
0000b8  eb000081          ADD      r0,r0,r1,LSL #2
0000bc  7c40              LDRB     r0,[r0,#0x11]
0000be  40a0              LSLS     r0,r0,r4
0000c0  4929              LDR      r1,|L8.360|
0000c2  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
0000c4  4308              ORRS     r0,r0,r1
0000c6  4928              LDR      r1,|L8.360|
0000c8  7008              STRB     r0,[r1,#0]
0000ca  e00f              B        |L8.236|
                  |L8.204|
;;;381    	        }
;;;382    	        else
;;;383    	        {
;;;384    	            SwOnOffData &= ~((!SwInformation.PortInfor[i].OnOffStatus)<<i);
0000cc  eb040184          ADD      r1,r4,r4,LSL #2
0000d0  481f              LDR      r0,|L8.336|
0000d2  eb000081          ADD      r0,r0,r1,LSL #2
0000d6  7c40              LDRB     r0,[r0,#0x11]
0000d8  b908              CBNZ     r0,|L8.222|
0000da  2001              MOVS     r0,#1
0000dc  e000              B        |L8.224|
                  |L8.222|
0000de  2000              MOVS     r0,#0
                  |L8.224|
0000e0  40a0              LSLS     r0,r0,r4
0000e2  4921              LDR      r1,|L8.360|
0000e4  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
0000e6  4381              BICS     r1,r1,r0
0000e8  481f              LDR      r0,|L8.360|
0000ea  7001              STRB     r1,[r0,#0]
                  |L8.236|
0000ec  1c60              ADDS     r0,r4,#1              ;376
0000ee  b2c4              UXTB     r4,r0                 ;376
                  |L8.240|
0000f0  2c06              CMP      r4,#6                 ;376
0000f2  dbd7              BLT      |L8.164|
;;;385    	        }
;;;386    	    }
;;;387    
;;;388    		RelatedCtrl.preStates = SwOnOffData;
0000f4  481c              LDR      r0,|L8.360|
0000f6  7800              LDRB     r0,[r0,#0]  ; SwOnOffData
0000f8  4918              LDR      r1,|L8.348|
0000fa  7008              STRB     r0,[r1,#0]
;;;389    		RelatedCtrl.ctrStates = state;
0000fc  4608              MOV      r0,r1
0000fe  7045              STRB     r5,[r0,#1]
;;;390    			
;;;391    	    if(state != SwOnOffData)
000100  4819              LDR      r0,|L8.360|
000102  7800              LDRB     r0,[r0,#0]  ; SwOnOffData
000104  4285              CMP      r5,r0
000106  d00c              BEQ      |L8.290|
;;;392    	    {
;;;393    //			sprintf(testBuf,"state = %d\t	SwOnOffData = %d\n",state,SwOnOffData);
;;;394    //			UdpDebugPrint(testBuf,sizeof(testBuf));
;;;395    					
;;;396    			if(0 == RelatedCtrl.delayTime)
000108  4608              MOV      r0,r1
00010a  6840              LDR      r0,[r0,#4]  ; RelatedCtrl
00010c  b948              CBNZ     r0,|L8.290|
;;;397    			{
;;;398    				SwOnOffData = state;
00010e  4816              LDR      r0,|L8.360|
000110  7005              STRB     r5,[r0,#0]
;;;399    				UsartControlPortOnOff(); 
000112  e000              B        |L8.278|
                  |L8.276|
000114  e014              B        |L8.320|
                  |L8.278|
000116  f7fffffe          BL       UsartControlPortOnOff
;;;400    				SwInformation.portChangeReason = PORT_CHANGE_BY_AUTO;
00011a  2008              MOVS     r0,#8
00011c  490c              LDR      r1,|L8.336|
00011e  3908              SUBS     r1,r1,#8
000120  70c8              STRB     r0,[r1,#3]
                  |L8.290|
;;;401    			}		
;;;402    			//UdpDebugPrint("Now excute related control!\r\n",sizeof("Now excute related control!\r\n")-1);
;;;403    	    }
;;;404    
;;;405    	  #elif(PORT_NUM == 1)
;;;406    	   
;;;407    	    //sprintf(testBuf,"cmd_state = %d\t	cur_state = %d\n",state,SwInformation.PortInfor[0].OnOffStatus);
;;;408    		//UdpDebugPrint(testBuf,sizeof(testBuf));
;;;409    
;;;410    	  	RelatedCtrl.preStates = SwInformation.PortInfor[0].OnOffStatus;
;;;411    		RelatedCtrl.ctrStates = state;
;;;412    			
;;;413    	    if(state != SwInformation.PortInfor[0].OnOffStatus)
;;;414    	    {
;;;415    			if(0 == RelatedCtrl.delayTime)
;;;416    			{
;;;417    				SwInformation.PortInfor[0].OnOffStatus = state;
;;;418    				Port_TurnOnOff(state);
;;;419    				SwInformation.portChangeReason = PORT_CHANGE_BY_AUTO;
;;;420    			}
;;;421    	    }
;;;422    	  #endif
;;;423    
;;;424    	  	RelatedCtrl.ctlTime = DevTimeObj.CurTimeSec;
000122  4812              LDR      r0,|L8.364|
000124  6b00              LDR      r0,[r0,#0x30]  ; DevTimeObj
000126  490d              LDR      r1,|L8.348|
000128  60c8              STR      r0,[r1,#0xc]  ; RelatedCtrl
;;;425    		RelatedCtrl.ctlMark = 1;
00012a  2001              MOVS     r0,#1
00012c  7088              STRB     r0,[r1,#2]
;;;426    		RelatedCtrl.afterMark = 0;
00012e  2000              MOVS     r0,#0
000130  70c8              STRB     r0,[r1,#3]
;;;427    
;;;428    		iRet = PASSED;
000132  4682              MOV      r10,r0
;;;429            
;;;430            SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);          //上报当前状态    
000134  480e              LDR      r0,|L8.368|
000136  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000138  f4407080          ORR      r0,r0,#0x100
00013c  490c              LDR      r1,|L8.368|
00013e  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
                  |L8.320|
;;;431    		//u_printf("After:state=%d port=%d\n",state,port);
;;;432    		//UdpDebugPrint("Now excute Switch_Ctl,DevRule.c 445 line!\r\n",sizeof("Now excute Switch_Ctl,DevRule.c 445 line!\r\n")-1);
;;;433    	}
;;;434    	
;;;435    	return iRet;
000140  4650              MOV      r0,r10
;;;436    
;;;437    }
000142  e8bd9ff0          POP      {r4-r12,pc}
;;;438    
                          ENDP

000146  0000              DCW      0x0000
                  |L8.328|
000148  73746174          DCB      "state",0
00014c  6500    
00014e  00                DCB      0
00014f  00                DCB      0
                  |L8.336|
                          DCD      SwInformation+0x8
                  |L8.340|
000154  61667465          DCB      "after",0
000158  7200    
00015a  00                DCB      0
00015b  00                DCB      0
                  |L8.348|
                          DCD      RelatedCtrl
                  |L8.352|
000160  64656c61          DCB      "delay",0
000164  7900    
000166  00                DCB      0
000167  00                DCB      0
                  |L8.360|
                          DCD      SwOnOffData
                  |L8.364|
                          DCD      DevTimeObj
                  |L8.368|
                          DCD      FwUpdateStatusObj

                          AREA ||i.Switch_TurnOnOff||, CODE, READONLY, ALIGN=2

                  Switch_TurnOnOff PROC
;;;584    *******************************************************************************/ 
;;;585    void Switch_TurnOnOff(uint8_t Port, uint8_t state)
000000  b570              PUSH     {r4-r6,lr}
;;;586    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;587        SetPortState(Port,state);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       SetPortState
;;;588        UsartControlPortOnOff();                    	       
00000e  f7fffffe          BL       UsartControlPortOnOff
;;;589    
;;;590    	SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);			//上报当前状态	  
000012  4803              LDR      r0,|L9.32|
000014  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000016  f4407080          ORR      r0,r0,#0x100
00001a  4901              LDR      r1,|L9.32|
00001c  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;591    	//UdpDebugPrint("Now OnOffSwitch--DevRule.c---829\r\n",strlen("Now OnOffSwitch--DevRule.c---829\r\n"));
;;;592        //u_printf("portNum = %d,SwOnOffData = %d, port=%d,state=%d\n",portNum,SwOnOffData,Port,state);
;;;593    }
00001e  bd70              POP      {r4-r6,pc}
;;;594    
                          ENDP

                  |L9.32|
                          DCD      FwUpdateStatusObj

                          AREA ||i.Switch_delayCtl||, CODE, READONLY, ALIGN=2

                  Switch_delayCtl PROC
;;;447    *******************************************************************************/ 
;;;448    void Switch_delayCtl(uint8_t ctlStates)
000000  b510              PUSH     {r4,lr}
;;;449    {
000002  4604              MOV      r4,r0
;;;450    //		char testBuf[100];
;;;451    		
;;;452    	
;;;453    #if(PORT_NUM == 6)
;;;454    		SwOnOffData = ctlStates;
000004  4806              LDR      r0,|L10.32|
000006  7004              STRB     r4,[r0,#0]
;;;455    
;;;456    //		sprintf(testBuf,"SwOnOffData = %d\n",SwOnOffData);
;;;457    //		UdpDebugPrint(testBuf,sizeof(testBuf));
;;;458    		
;;;459    		UsartControlPortOnOff(); 
000008  f7fffffe          BL       UsartControlPortOnOff
;;;460    #elif(PORT_NUM == 1)
;;;461    		SwInformation.PortInfor[0].OnOffStatus = ctlStates;
;;;462    		Port_TurnOnOff(ctlStates);
;;;463    		#if defined(ZX_DETECT)
;;;464    	     plug_updata = 1;
;;;465    		#endif
;;;466    
;;;467    		//u_printf("devRule.c--594\n");
;;;468    #endif
;;;469    	  SwInformation.portChangeReason = PORT_CHANGE_BY_AUTO;
00000c  2008              MOVS     r0,#8
00000e  4905              LDR      r1,|L10.36|
000010  70c8              STRB     r0,[r1,#3]
;;;470    
;;;471    	  SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);          //上报当前状态SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_8_IS_SYNC_RT_DATA_CMD);          //上报当前状态
000012  4805              LDR      r0,|L10.40|
000014  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000016  f4407080          ORR      r0,r0,#0x100
00001a  4903              LDR      r1,|L10.40|
00001c  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;472    
;;;473    	  //UdpDebugPrint("Now recover related control!\r\n",sizeof("Now recover related control!\r\n")-1);
;;;474    }
00001e  bd10              POP      {r4,pc}
;;;475    
                          ENDP

                  |L10.32|
                          DCD      SwOnOffData
                  |L10.36|
                          DCD      SwInformation
                  |L10.40|
                          DCD      FwUpdateStatusObj

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  RelatedCtrl
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  7b226d6f          DCB      0x7b,0x22,0x6d,0x6f
000004  6465223a          DCB      0x64,0x65,0x22,0x3a
000008  25642c22          DCB      0x25,0x64,0x2c,0x22
00000c  6964223a          DCB      0x69,0x64,0x22,0x3a
000010  25642c22          DCB      0x25,0x64,0x2c,0x22
000014  656e223a          DCB      0x65,0x6e,0x22,0x3a
000018  25642c22          DCB      0x25,0x64,0x2c,0x22
00001c  706f7274          DCB      0x70,0x6f,0x72,0x74
000020  223a5b25          DCB      0x22,0x3a,0x5b,0x25
000024  642c2564          DCB      0x64,0x2c,0x25,0x64
000028  2c25642c          DCB      0x2c,0x25,0x64,0x2c
00002c  25642c25          DCB      0x25,0x64,0x2c,0x25
000030  642c2564          DCB      0x64,0x2c,0x25,0x64
000034  5d2c2264          DCB      0x5d,0x2c,0x22,0x64
000038  6179223a          DCB      0x61,0x79,0x22,0x3a
00003c  25642c22          DCB      0x25,0x64,0x2c,0x22
000040  74696d65          DCB      0x74,0x69,0x6d,0x65
000044  223a2564          DCB      0x22,0x3a,0x25,0x64
000048  2c00              DCB      0x2c,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  SwitchPinArr
                          DCD      0x0000001e
                          %        20
                  SwOnOffData
000018  00                DCB      0x00
                  portNum
000019  06                DCB      0x06
                  LedFlashControl
00001a  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  SwInformation
000020  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000028  504f5254          DCB      0x50,0x4f,0x52,0x54
00002c  31000000          DCB      0x31,0x00,0x00,0x00
                          DCD      0x00000000
000034  00000000          DCB      0x00,0x00,0x00,0x00
000038  00000200          DCB      0x00,0x00,0x02,0x00
00003c  504f5254          DCB      0x50,0x4f,0x52,0x54
000040  32000000          DCB      0x32,0x00,0x00,0x00
                          DCD      0x00000000
000048  00000000          DCB      0x00,0x00,0x00,0x00
00004c  00000200          DCB      0x00,0x00,0x02,0x00
000050  504f5254          DCB      0x50,0x4f,0x52,0x54
000054  33000000          DCB      0x33,0x00,0x00,0x00
                          DCD      0x00000000
00005c  00000000          DCB      0x00,0x00,0x00,0x00
000060  00000200          DCB      0x00,0x00,0x02,0x00
000064  504f5254          DCB      0x50,0x4f,0x52,0x54
000068  34000000          DCB      0x34,0x00,0x00,0x00
                          DCD      0x00000000
000070  00000000          DCB      0x00,0x00,0x00,0x00
000074  00000200          DCB      0x00,0x00,0x02,0x00
000078  504f5254          DCB      0x50,0x4f,0x52,0x54
00007c  35000000          DCB      0x35,0x00,0x00,0x00
                          DCD      0x00000000
000084  00000000          DCB      0x00,0x00,0x00,0x00
000088  00000200          DCB      0x00,0x00,0x02,0x00
00008c  504f5254          DCB      0x50,0x4f,0x52,0x54
000090  36000000          DCB      0x36,0x00,0x00,0x00
                          DCD      0x00000000
000098  00000000          DCB      0x00,0x00,0x00,0x00
00009c  00000200          DCB      0x00,0x00,0x02,0x00
                          %        20
