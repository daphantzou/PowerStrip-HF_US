; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\keydrv.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\keydrv.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\keydrv.crf ..\src\KeyDrv.c]
                          THUMB

                          AREA ||i.KeyTurnOnOffSwitch||, CODE, READONLY, ALIGN=2

                  KeyTurnOnOffSwitch PROC
;;;62     extern int SwitchPinArr[PORT_NUM];
;;;63     void KeyTurnOnOffSwitch(void)
000000  480a              LDR      r0,|L1.44|
;;;64     { 
;;;65         if(SwInformation.PortInfor[0].CurStatus)
000002  7e00              LDRB     r0,[r0,#0x18]
000004  b128              CBZ      r0,|L1.18|
;;;66         { 	
;;;67     		#if !defined(ZX_DETECT)
;;;68             hfgpio_fset_out_low(SwitchPinArr[0]);
;;;69     		#endif
;;;70             SwInformation.PortInfor[0].OldStatus      = SwInformation.PortInfor[0].CurStatus;
000006  4809              LDR      r0,|L1.44|
000008  7e01              LDRB     r1,[r0,#0x18]
00000a  75c1              STRB     r1,[r0,#0x17]
;;;71             SwInformation.PortInfor[0].CurStatus      = 0;        
00000c  2100              MOVS     r1,#0
00000e  7601              STRB     r1,[r0,#0x18]
000010  e004              B        |L1.28|
                  |L1.18|
;;;72         } 
;;;73         else 
;;;74         { 
;;;75     		#if !defined(ZX_DETECT)
;;;76             hfgpio_fset_out_high(SwitchPinArr[0]);
;;;77     		#endif
;;;78             SwInformation.PortInfor[0].OldStatus      = SwInformation.PortInfor[0].CurStatus;
000012  4806              LDR      r0,|L1.44|
000014  7e01              LDRB     r1,[r0,#0x18]
000016  75c1              STRB     r1,[r0,#0x17]
;;;79             SwInformation.PortInfor[0].CurStatus      = 1;
000018  2101              MOVS     r1,#1
00001a  7601              STRB     r1,[r0,#0x18]
                  |L1.28|
;;;80         } 
;;;81         
;;;82     	#if  defined(__KEY_ON_OFF_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;83     	UdpDebugPrint("KeyOnOffSw\r\n", sizeof("KeyOnOffSw\r\n")-1);
;;;84     	#endif 
;;;85         iSaveSwStateCount = 0x00; 
00001c  2000              MOVS     r0,#0
00001e  4904              LDR      r1,|L1.48|
000020  7008              STRB     r0,[r1,#0]
;;;86         SwInformation.PortInfor[0].OnOffStatus    = SwInformation.PortInfor[0].CurStatus;
000022  4802              LDR      r0,|L1.44|
000024  7e01              LDRB     r1,[r0,#0x18]
000026  7641              STRB     r1,[r0,#0x19]
;;;87     } 
000028  4770              BX       lr
;;;88     
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      SwInformation
                  |L1.48|
                          DCD      iSaveSwStateCount

                          AREA ||i.Key_Check||, CODE, READONLY, ALIGN=2

                  Key_Check PROC
;;;190    *******************************************************************************/
;;;191    static void Key_Check(void)
000000  2000              MOVS     r0,#0
;;;192    {
;;;193    	uint8_t i = 0;
;;;194    	
;;;195    	for(i=0; i<portNum; i++)
000002  bf00              NOP      
000004  e038              B        |L2.120|
                  |L2.6|
;;;196    	{ 
;;;197    		if( (KeyObj.KeyLastStatus & (1<<i)) != (KeyObj.KeyTemp & (1<<i)) )  // 状态发生变化 
000006  491f              LDR      r1,|L2.132|
000008  79c9              LDRB     r1,[r1,#7]  ; KeyObj
00000a  2201              MOVS     r2,#1
00000c  4082              LSLS     r2,r2,r0
00000e  4011              ANDS     r1,r1,r2
000010  4a1c              LDR      r2,|L2.132|
000012  7992              LDRB     r2,[r2,#6]  ; KeyObj
000014  2301              MOVS     r3,#1
000016  4083              LSLS     r3,r3,r0
000018  401a              ANDS     r2,r2,r3
00001a  4291              CMP      r1,r2
00001c  d02a              BEQ      |L2.116|
;;;198    		{ 
;;;199    			ClrBit(KeyObj.KeyLastStatus, i); 
00001e  4919              LDR      r1,|L2.132|
000020  79c9              LDRB     r1,[r1,#7]  ; KeyObj
000022  2201              MOVS     r2,#1
000024  4082              LSLS     r2,r2,r0
000026  4391              BICS     r1,r1,r2
000028  4a16              LDR      r2,|L2.132|
00002a  71d1              STRB     r1,[r2,#7]
;;;200                OrBit (KeyObj.KeyLastStatus, (KeyObj.KeyTemp & (1<<i))); 
00002c  4611              MOV      r1,r2
00002e  7989              LDRB     r1,[r1,#6]  ; KeyObj
000030  2201              MOVS     r2,#1
000032  4082              LSLS     r2,r2,r0
000034  4011              ANDS     r1,r1,r2
000036  4a13              LDR      r2,|L2.132|
000038  79d2              LDRB     r2,[r2,#7]  ; KeyObj
00003a  4311              ORRS     r1,r1,r2
00003c  4a11              LDR      r2,|L2.132|
00003e  71d1              STRB     r1,[r2,#7]
;;;201    			ClrBit(KeyObj.UpDown, i); 
000040  4611              MOV      r1,r2
000042  7a0a              LDRB     r2,[r1,#8]  ; KeyObj
000044  2101              MOVS     r1,#1
000046  4081              LSLS     r1,r1,r0
000048  438a              BICS     r2,r2,r1
00004a  490e              LDR      r1,|L2.132|
00004c  720a              STRB     r2,[r1,#8]
;;;202                OrBit (KeyObj.UpDown, (KeyObj.KeyTemp & (1<<i))); 
00004e  7989              LDRB     r1,[r1,#6]  ; KeyObj
000050  2201              MOVS     r2,#1
000052  4082              LSLS     r2,r2,r0
000054  4011              ANDS     r1,r1,r2
000056  4a0b              LDR      r2,|L2.132|
000058  7a12              LDRB     r2,[r2,#8]  ; KeyObj
00005a  4311              ORRS     r1,r1,r2
00005c  4a09              LDR      r2,|L2.132|
00005e  7211              STRB     r1,[r2,#8]
;;;203                
;;;204                if(isBitSet(KeyObj.UpDown, KEY_0_NUM))                          // 按键按下 
000060  4611              MOV      r1,r2
000062  7a09              LDRB     r1,[r1,#8]  ; KeyObj
000064  f0110f01          TST      r1,#1
000068  d001              BEQ      |L2.110|
;;;205                { 
;;;206                    KeyObj.KeyDownTimeCount = 0;                                // 按键按下时间清0 
00006a  2100              MOVS     r1,#0
00006c  8151              STRH     r1,[r2,#0xa]
                  |L2.110|
;;;207                } 
;;;208    			KeyObj.Data_Change_Flag = STATUS_CHG_VAR;                       // 有按键更新事件 
00006e  2101              MOVS     r1,#1
000070  4a04              LDR      r2,|L2.132|
000072  6011              STR      r1,[r2,#0]  ; KeyObj
                  |L2.116|
000074  1c41              ADDS     r1,r0,#1              ;195
000076  b2c8              UXTB     r0,r1                 ;195
                  |L2.120|
000078  4903              LDR      r1,|L2.136|
00007a  7809              LDRB     r1,[r1,#0]            ;195  ; portNum
00007c  4288              CMP      r0,r1                 ;195
00007e  dbc2              BLT      |L2.6|
;;;209    		} 
;;;210    	} 
;;;211    }
000080  4770              BX       lr
;;;212    /******************************************************************************* 
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
                          DCD      KeyObj
                  |L2.136|
                          DCD      portNum

                          AREA ||i.Key_DriveEngine||, CODE, READONLY, ALIGN=2

                  Key_DriveEngine PROC
;;;142    *******************************************************************************/
;;;143    extern void Key_DriveEngine(int32_t ArgTick)
000000  490b              LDR      r1,|L3.48|
;;;144    { 
;;;145        if(isBitSet(KeyObj.UpDown, KEY_0_NUM))                              // 按键按下 
000002  7a09              LDRB     r1,[r1,#8]  ; KeyObj
000004  f0110f01          TST      r1,#1
000008  d004              BEQ      |L3.20|
;;;146        { 
;;;147            KeyObj.KeyDownTimeCount++; 
00000a  4909              LDR      r1,|L3.48|
00000c  8949              LDRH     r1,[r1,#0xa]  ; KeyObj
00000e  1c49              ADDS     r1,r1,#1
000010  4a07              LDR      r2,|L3.48|
000012  8151              STRH     r1,[r2,#0xa]
                  |L3.20|
;;;148        } 
;;;149    	if((STATUS_STABLE == KeyObj.Data_Change_Flag) || ((ArgTick%4) == 0)) 
000014  4a06              LDR      r2,|L3.48|
000016  6812              LDR      r2,[r2,#0]  ; KeyObj
000018  b132              CBZ      r2,|L3.40|
00001a  17c2              ASRS     r2,r0,#31
00001c  eb007292          ADD      r2,r0,r2,LSR #30
000020  1092              ASRS     r2,r2,#2
000022  ebb00282          SUBS     r2,r0,r2,LSL #2
000026  d102              BNE      |L3.46|
                  |L3.40|
;;;150    	{ 
;;;151            KeyObj.Matrix_Scan_Flag = 0x00;
000028  2100              MOVS     r1,#0
00002a  4a01              LDR      r2,|L3.48|
00002c  7111              STRB     r1,[r2,#4]
                  |L3.46|
;;;152    	} 
;;;153        
;;;154        return;
;;;155    } 
00002e  4770              BX       lr
;;;156    /*******************************************************************************
                          ENDP

                  |L3.48|
                          DCD      KeyObj

                          AREA ||i.Key_Init||, CODE, READONLY, ALIGN=2

                  Key_Init PROC
;;;37     *******************************************************************************/
;;;38     extern void Key_Init(void)
000000  2000              MOVS     r0,#0
;;;39     {
;;;40     	KeyObj.KeyLastStatus = 0x00;
000002  4903              LDR      r1,|L4.16|
000004  71c8              STRB     r0,[r1,#7]
;;;41     	KeyObj.KeyTemp       = 0x00;
000006  7188              STRB     r0,[r1,#6]
;;;42     	KeyObj.UpDown        = 0x00;
000008  7208              STRB     r0,[r1,#8]
;;;43     	KeyObj.KeyStatusCHK  = 0x00;
00000a  7148              STRB     r0,[r1,#5]
;;;44     	//hfgpio_fpin_high(HFGPIO_SW_KEY_CTL_PIN);
;;;45     }
00000c  4770              BX       lr
;;;46     /*******************************************************************************
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      KeyObj

                          AREA ||i.Key_Poll||, CODE, READONLY, ALIGN=2

                  Key_Poll PROC
;;;101    
;;;102    extern void Key_Poll(void) 
000000  b510              PUSH     {r4,lr}
;;;103    { 
;;;104        if(STATUS_STABLE == KeyObj.Data_Change_Flag) 
000002  481d              LDR      r0,|L5.120|
000004  6800              LDR      r0,[r0,#0]  ; KeyObj
000006  b900              CBNZ     r0,|L5.10|
                  |L5.8|
;;;105        { 
;;;106            return; 
;;;107        } 
;;;108        
;;;109        if((isBitSet(KeyObj.UpDown, KEY_0_NUM)) && (KEY_LONG_PRESS_3S < KeyObj.KeyDownTimeCount))                  // 按下大于3S KEY_LONG_PRESS_3S
;;;110        { 
;;;111            KeyObj.Data_Change_Flag = STATUS_STABLE; 
;;;112            ClrBit(KeyObj.UpDown, KEY_0_NUM); 
;;;113            if(isBitSet(KeyObj.KeyStatusCHK, KEY_POWER_AP_VALID_0_BIT))     // AP Key valid 
;;;114            {            
;;;115                 FlashResetFactory(); 
;;;116            }
;;;117            return; 
;;;118        } 
;;;119        if(0 == isBitSet(KeyObj.UpDown, KEY_0_NUM))                         // 按键按下至弹起小于3S 
;;;120        { 
;;;121            KeyObj.Data_Change_Flag = STATUS_STABLE; 
;;;122            ClrBit(KeyObj.UpDown, KEY_0_NUM); 
;;;123            
;;;124            if(isBitSet(KeyObj.KeyStatusCHK, KEY_POWER_AP_VALID_0_BIT))     // AP Key valid 
;;;125            {
;;;126                KeyTurnOnOffSwitch();
;;;127    			SwInformation.portChangeReason = PORT_CHANGE_BY_KEY;
;;;128    			#if defined(ZX_DETECT)
;;;129                plug_updata = 1;
;;;130    			#endif
;;;131    
;;;132    			//u_printf("keyDrv.c--156\n");
;;;133            }
;;;134            return; 
;;;135        } 
;;;136    } 
000008  bd10              POP      {r4,pc}
                  |L5.10|
00000a  481b              LDR      r0,|L5.120|
00000c  7a00              LDRB     r0,[r0,#8]            ;109  ; KeyObj
00000e  f0100f01          TST      r0,#1                 ;109
000012  d014              BEQ      |L5.62|
000014  4818              LDR      r0,|L5.120|
000016  8940              LDRH     r0,[r0,#0xa]          ;109  ; KeyObj
000018  f5b07ffa          CMP      r0,#0x1f4             ;109
00001c  dd0f              BLE      |L5.62|
00001e  2000              MOVS     r0,#0                 ;111
000020  4915              LDR      r1,|L5.120|
000022  6008              STR      r0,[r1,#0]            ;111  ; KeyObj
000024  4608              MOV      r0,r1                 ;112
000026  7a00              LDRB     r0,[r0,#8]            ;112  ; KeyObj
000028  f0200001          BIC      r0,r0,#1              ;112
00002c  7208              STRB     r0,[r1,#8]            ;112
00002e  4608              MOV      r0,r1                 ;113
000030  7940              LDRB     r0,[r0,#5]            ;113  ; KeyObj
000032  f0100f01          TST      r0,#1                 ;113
000036  d001              BEQ      |L5.60|
000038  f7fffffe          BL       FlashResetFactory
                  |L5.60|
00003c  e7e4              B        |L5.8|
                  |L5.62|
00003e  480e              LDR      r0,|L5.120|
000040  7a00              LDRB     r0,[r0,#8]            ;119  ; KeyObj
000042  f0100f01          TST      r0,#1                 ;119
000046  d115              BNE      |L5.116|
000048  2000              MOVS     r0,#0                 ;121
00004a  490b              LDR      r1,|L5.120|
00004c  6008              STR      r0,[r1,#0]            ;121  ; KeyObj
00004e  4608              MOV      r0,r1                 ;122
000050  7a00              LDRB     r0,[r0,#8]            ;122  ; KeyObj
000052  f0200001          BIC      r0,r0,#1              ;122
000056  7208              STRB     r0,[r1,#8]            ;122
000058  4608              MOV      r0,r1                 ;124
00005a  7940              LDRB     r0,[r0,#5]            ;124  ; KeyObj
00005c  f0100f01          TST      r0,#1                 ;124
000060  d007              BEQ      |L5.114|
000062  f7fffffe          BL       KeyTurnOnOffSwitch
000066  2002              MOVS     r0,#2                 ;127
000068  4904              LDR      r1,|L5.124|
00006a  70c8              STRB     r0,[r1,#3]            ;127
00006c  2001              MOVS     r0,#1                 ;129
00006e  4904              LDR      r1,|L5.128|
000070  7008              STRB     r0,[r1,#0]            ;129
                  |L5.114|
000072  e7c9              B        |L5.8|
                  |L5.116|
000074  bf00              NOP      
000076  e7c7              B        |L5.8|
;;;137    /******************************************************************************* 
                          ENDP

                  |L5.120|
                          DCD      KeyObj
                  |L5.124|
                          DCD      SwInformation
                  |L5.128|
                          DCD      plug_updata

                          AREA ||i.Key_Scan||, CODE, READONLY, ALIGN=2

                  Key_Scan PROC
;;;161    *******************************************************************************/
;;;162    extern void Key_Scan(void)
000000  b510              PUSH     {r4,lr}
;;;163    {
;;;164    	if(0x01 == KeyObj.Matrix_Scan_Flag)
000002  480f              LDR      r0,|L6.64|
000004  7900              LDRB     r0,[r0,#4]  ; KeyObj
000006  2801              CMP      r0,#1
000008  d100              BNE      |L6.12|
                  |L6.10|
;;;165    	{ 
;;;166    		return;
;;;167    	} 
;;;168    	KeyObj.Matrix_Scan_Flag 	= 0x01; 
;;;169    	
;;;170        KeyObj.KeyTemp   = 0x00; 
;;;171    	if(KEY_PRESS_STATUS == KEY_IN) 
;;;172    	{ 
;;;173            //u_printf("Key Press \r\n");
;;;174            
;;;175    	    SetBit(KeyObj.KeyTemp, KEY_0_NUM); 
;;;176    	}
;;;177    	else 
;;;178    	{
;;;179            //u_printf("Key Reset Factory\r\n");
;;;180            
;;;181    	    SetBit(KeyObj.KeyStatusCHK, KEY_POWER_AP_VALID_0_BIT); 
;;;182    	}
;;;183    	Key_Check();													    // 检测按键状态是否发生变化，并检出变化状态
;;;184    }
00000a  bd10              POP      {r4,pc}
                  |L6.12|
00000c  2001              MOVS     r0,#1                 ;168
00000e  490c              LDR      r1,|L6.64|
000010  7108              STRB     r0,[r1,#4]            ;168
000012  2000              MOVS     r0,#0                 ;170
000014  7188              STRB     r0,[r1,#6]            ;170
000016  201d              MOVS     r0,#0x1d              ;171
000018  f7fffffe          BL       hfgpio_fpin_is_high
00001c  b930              CBNZ     r0,|L6.44|
00001e  4808              LDR      r0,|L6.64|
000020  7980              LDRB     r0,[r0,#6]            ;175  ; KeyObj
000022  f0400001          ORR      r0,r0,#1              ;175
000026  4906              LDR      r1,|L6.64|
000028  7188              STRB     r0,[r1,#6]            ;175
00002a  e005              B        |L6.56|
                  |L6.44|
00002c  4804              LDR      r0,|L6.64|
00002e  7940              LDRB     r0,[r0,#5]            ;181  ; KeyObj
000030  f0400001          ORR      r0,r0,#1              ;181
000034  4902              LDR      r1,|L6.64|
000036  7148              STRB     r0,[r1,#5]            ;181
                  |L6.56|
000038  f7fffffe          BL       Key_Check
00003c  bf00              NOP      
00003e  e7e4              B        |L6.10|
;;;185    /*******************************************************************************
                          ENDP

                  |L6.64|
                          DCD      KeyObj

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  KeyObj
                          %        12
