; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\udpsocket.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\udpsocket.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\udpsocket.crf ..\src\UdpSocket.c]
                          THUMB

                          AREA ||i.UdpServerThread_Create||, CODE, READONLY, ALIGN=2

                  UdpServerThread_Create PROC
;;;35     *******************************************************************************/ 
;;;36     extern void UdpServerThread_Create(void) 
000000  b50e              PUSH     {r1-r3,lr}
;;;37     {
;;;38         ufd = -1;
000002  f04f30ff          MOV      r0,#0xffffffff
000006  4907              LDR      r1,|L1.36|
000008  6008              STR      r0,[r1,#0]  ; ufd
;;;39         hfthread_create(UdpServer_ThreadFunc, "UdpServer", 512, (void*)1, HFTHREAD_PRIORITIES_LOW, NULL, NULL); 
00000a  2000              MOVS     r0,#0
00000c  2201              MOVS     r2,#1
00000e  e9cd2000          STRD     r2,r0,[sp,#0]
000012  4613              MOV      r3,r2
000014  0252              LSLS     r2,r2,#9
000016  a104              ADR      r1,|L1.40|
000018  9002              STR      r0,[sp,#8]
00001a  4806              LDR      r0,|L1.52|
00001c  f7fffffe          BL       hfthread_create
;;;40     }
000020  bd0e              POP      {r1-r3,pc}
;;;41     
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      ufd
                  |L1.40|
000028  55647053          DCB      "UdpServer",0
00002c  65727665
000030  7200    
000032  00                DCB      0
000033  00                DCB      0
                  |L1.52|
                          DCD      UdpServer_ThreadFunc

                          AREA ||i.UdpServerThread_GetSocketFd||, CODE, READONLY, ALIGN=2

                  UdpServerThread_GetSocketFd PROC
;;;43     
;;;44     extern int UdpServerThread_GetSocketFd(void)
000000  4801              LDR      r0,|L2.8|
;;;45     {
;;;46         return ufd; 
000002  6800              LDR      r0,[r0,#0]  ; ufd
;;;47     }
000004  4770              BX       lr
;;;48     /*******************************************************************************
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ufd

                          AREA ||i.UdpServer_SendData||, CODE, READONLY, ALIGN=2

                  UdpServer_SendData PROC
;;;53     *******************************************************************************/ 
;;;54     extern void UdpServer_SendData(char *pArgBuf, int ArgLength)
000000  b57c              PUSH     {r2-r6,lr}
;;;55     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;56         sendto(ufd, pArgBuf, ArgLength, 0, (struct sockaddr*)&RecvAddr, sizeof(struct sockaddr)); 
000006  2010              MOVS     r0,#0x10
000008  4905              LDR      r1,|L3.32|
00000a  2300              MOVS     r3,#0
00000c  462a              MOV      r2,r5
00000e  e9cd1000          STRD     r1,r0,[sp,#0]
000012  4621              MOV      r1,r4
000014  4803              LDR      r0,|L3.36|
000016  6800              LDR      r0,[r0,#0]  ; ufd
000018  f7fffffe          BL       lwip_sendto
;;;57     }
00001c  bd7c              POP      {r2-r6,pc}
;;;58     /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      RecvAddr
                  |L3.36|
                          DCD      ufd

                          AREA ||i.UdpServer_ThreadFunc||, CODE, READONLY, ALIGN=2

                  UdpServer_ThreadFunc PROC
;;;63     *******************************************************************************/ 
;;;64     USER_FUNC extern void UdpServer_ThreadFunc(void* arg)
000000  b08a              SUB      sp,sp,#0x28
;;;65     { 
;;;66     	int                 recv_num = 0, alen; 
000002  2400              MOVS     r4,#0
;;;67     	uint8_t             mac_addr[6]={0}; 
000004  2000              MOVS     r0,#0
000006  9007              STR      r0,[sp,#0x1c]
000008  9008              STR      r0,[sp,#0x20]
;;;68         struct sockaddr_in  ServerAddr;
;;;69         
;;;70        #if  defined(__SELECT_MECHANISM__)
;;;71         int				    ret;
;;;72     	fd_set 			    rset;
;;;73     	struct timeval 	    timeout;
;;;74        #endif 
;;;75     
;;;76         (void)arg;
;;;77         
;;;78     UDP_start:
00000a  bf00              NOP      
                  |L4.12|
;;;79     	ufd = socket(AF_INET, SOCK_DGRAM, 0);
00000c  2200              MOVS     r2,#0
00000e  2102              MOVS     r1,#2
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       hf_lwip_socket
000016  492d              LDR      r1,|L4.204|
000018  6008              STR      r0,[r1,#0]  ; ufd
;;;80     	if(ufd<0)
;;;81     	{
;;;82     		//u_printf("create udp socket fail\n");
;;;83     	}
;;;84     
;;;85     	hfnet_set_udp_broadcast_port_valid(8888,8889);
00001a  f24221b9          MOV      r1,#0x22b9
00001e  1e48              SUBS     r0,r1,#1
000020  f7fffffe          BL       hfnet_set_udp_broadcast_port_valid
;;;86     	
;;;87     	memset((char*)&ServerAddr,0, sizeof(ServerAddr));
000024  2000              MOVS     r0,#0
000026  9003              STR      r0,[sp,#0xc]
000028  9004              STR      r0,[sp,#0x10]
00002a  9005              STR      r0,[sp,#0x14]
00002c  9006              STR      r0,[sp,#0x18]
;;;88     	
;;;89         alen                        = sizeof(struct sockaddr_in);
00002e  2010              MOVS     r0,#0x10
000030  9009              STR      r0,[sp,#0x24]
;;;90         ServerAddr.sin_family       = AF_INET;
000032  2002              MOVS     r0,#2
000034  f88d000d          STRB     r0,[sp,#0xd]
;;;91         ServerAddr.sin_port         = htons(8888);
000038  f24220b8          MOV      r0,#0x22b8
00003c  f7fffffe          BL       lwip_htons
000040  f8ad000e          STRH     r0,[sp,#0xe]
;;;92         ServerAddr.sin_addr.s_addr  = htonl(INADDR_ANY);
000044  2000              MOVS     r0,#0
000046  f7fffffe          BL       lwip_htonl
00004a  9004              STR      r0,[sp,#0x10]
;;;93         memcpy((char*)&RecvAddr, (char*)&ServerAddr, sizeof(ServerAddr));
00004c  4820              LDR      r0,|L4.208|
00004e  a903              ADD      r1,sp,#0xc
000050  c92e              LDM      r1,{r1-r3,r5}
000052  c02e              STM      r0!,{r1-r3,r5}
;;;94         
;;;95     	if(bind(ufd, (struct sockaddr*)&ServerAddr, sizeof(ServerAddr)) < 0)
000054  2210              MOVS     r2,#0x10
000056  a903              ADD      r1,sp,#0xc
000058  481c              LDR      r0,|L4.204|
00005a  6800              LDR      r0,[r0,#0]  ; ufd
00005c  f7fffffe          BL       lwip_bind
;;;96     	{
;;;97     		//u_printf("bind udp socket error\n");
;;;98     	}
;;;99         //UdpServerRecvBuf[UDP_SERVER_RECV_LENGTH] = '\0'; 
;;;100        memset(UdpServerRecvBuf,0,UDP_SERVER_RECV_LENGTH);
000060  f44f61af          MOV      r1,#0x578
000064  481b              LDR      r0,|L4.212|
000066  f7fffffe          BL       __aeabi_memclr4
;;;101        
;;;102    	for(;;)
00006a  bf00              NOP      
                  |L4.108|
;;;103    	{ 
;;;104    	   #if  defined(__SELECT_MECHANISM__)
;;;105    		FD_ZERO(&rset); 
;;;106    		FD_SET(ufd, &rset); 
;;;107    		timeout.tv_sec  = 3; 
;;;108    		timeout.tv_usec = 0; 
;;;109    		ret = hfuart_select(ufd+1, &rset, NULL, NULL, &timeout); 
;;;110    		if( ret<=0 )
;;;111    		{
;;;112    		    continue;
;;;113    		}
;;;114    	   #endif 
;;;115    	   
;;;116        	recv_num = hfnet_recvfrom(ufd, UdpServerRecvBuf, UDP_SERVER_RECV_LENGTH, 0, 
00006c  a807              ADD      r0,sp,#0x1c
00006e  a909              ADD      r1,sp,#0x24
000070  4a17              LDR      r2,|L4.208|
000072  2300              MOVS     r3,#0
000074  e9cd2100          STRD     r2,r1,[sp,#0]
000078  9002              STR      r0,[sp,#8]
00007a  f44f62af          MOV      r2,#0x578
00007e  4915              LDR      r1,|L4.212|
000080  4812              LDR      r0,|L4.204|
000082  6800              LDR      r0,[r0,#0]  ; ufd
000084  f7fffffe          BL       hfnet_recvfrom
000088  4604              MOV      r4,r0
;;;117        	                          (struct sockaddr*)&RecvAddr, (socklen_t*)&alen, (char*)mac_addr);
;;;118    
;;;119    		//u_printf("Receive_bytes = %d\n",recv_num);
;;;120        	
;;;121        	if((recv_num)>0)
00008a  2c00              CMP      r4,#0
00008c  dd08              BLE      |L4.160|
;;;122        	{ 
;;;123        	    UdpServerRecvBuf[recv_num] = '\0'; 
00008e  2000              MOVS     r0,#0
000090  4910              LDR      r1,|L4.212|
000092  5508              STRB     r0,[r1,r4]
;;;124        	    UdpServer_RecvData( HFNET_SOCKETA_DATA_READY, 
000094  f44f63af          MOV      r3,#0x578
000098  4622              MOV      r2,r4
00009a  f7fffffe          BL       UdpServer_RecvData
00009e  e008              B        |L4.178|
                  |L4.160|
;;;125        	                        UdpServerRecvBuf, 
;;;126        	                        recv_num,
;;;127        	                        UDP_SERVER_RECV_LENGTH);
;;;128        	} 
;;;129        	else
;;;130        	{
;;;131        	     //hfsys_reset();
;;;132        	     u_printf("Now the udp receive zreo bytes\n");
0000a0  a10d              ADR      r1,|L4.216|
0000a2  200a              MOVS     r0,#0xa
0000a4  f7fffffe          BL       HF_Debug
;;;133        	     close(ufd);
0000a8  4808              LDR      r0,|L4.204|
0000aa  6800              LDR      r0,[r0,#0]  ; ufd
0000ac  f7fffffe          BL       hf_lwip_close
;;;134        	     
;;;135    			 goto UDP_start;
0000b0  e7ac              B        |L4.12|
                  |L4.178|
;;;136        	}
;;;137    
;;;138    		if(resetWifiMark)
0000b2  4811              LDR      r0,|L4.248|
0000b4  7800              LDRB     r0,[r0,#0]  ; resetWifiMark
0000b6  2800              CMP      r0,#0
0000b8  d0d8              BEQ      |L4.108|
;;;139        	{
;;;140        		 resetWifiMark = 0;
0000ba  2000              MOVS     r0,#0
0000bc  490e              LDR      r1,|L4.248|
0000be  7008              STRB     r0,[r1,#0]
;;;141        		 
;;;142        		 close(ufd);   	     
0000c0  4802              LDR      r0,|L4.204|
0000c2  6800              LDR      r0,[r0,#0]  ; ufd
0000c4  f7fffffe          BL       hf_lwip_close
;;;143    			 goto UDP_start;
0000c8  e7a0              B        |L4.12|
;;;144        	}
;;;145    		//hf_thread_delay(500);
;;;146    	} 
;;;147    }
;;;148    #endif 
                          ENDP

0000ca  0000              DCW      0x0000
                  |L4.204|
                          DCD      ufd
                  |L4.208|
                          DCD      RecvAddr
                  |L4.212|
                          DCD      UdpServerRecvBuf
                  |L4.216|
0000d8  4e6f7720          DCB      "Now the udp receive zreo bytes\n",0
0000dc  74686520
0000e0  75647020
0000e4  72656365
0000e8  69766520
0000ec  7a72656f
0000f0  20627974
0000f4  65730a00
                  |L4.248|
                          DCD      resetWifiMark

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  UdpServerRecvBuf
                          %        1404
                  RecvAddr
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  ufd
                          DCD      0xffffffff
