; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\publicservercom.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\publicservercom.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\publicservercom.crf ..\src\PublicServerCom.c]
                          THUMB

                          AREA ||i.PublicServer_Init||, CODE, READONLY, ALIGN=2

                  PublicServer_Init PROC
;;;59     *******************************************************************************/ 
;;;60     void PublicServer_Init(void)
000000  4803              LDR      r0,|L1.16|
;;;61     {
;;;62         OrBit(FwUpdateStatusObj.TimelyCheck, (PUBLIC_SERVER_INIT_STATUS));
000002  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000004  f4405088          ORR      r0,r0,#0x1100
000008  4901              LDR      r1,|L1.16|
00000a  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;63     }
00000c  4770              BX       lr
;;;64     
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      FwUpdateStatusObj

                          AREA ||i.PublicServer_SyncAllWithServer||, CODE, READONLY, ALIGN=1

                  PublicServer_SyncAllWithServer PROC
;;;70     *******************************************************************************/ 
;;;71     void PublicServer_SyncAllWithServer(void)
000000  b500              PUSH     {lr}
;;;72     {
;;;73         PublicServer_SyncBaseInfoWithServer();
000002  f7fffffe          BL       PublicServer_SyncBaseInfoWithServer
;;;74         PublicServer_SyncCostWithServer();
000006  f7fffffe          BL       PublicServer_SyncCostWithServer
;;;75     }
00000a  bd00              POP      {pc}
;;;76     
                          ENDP


                          AREA ||i.PublicServer_SyncBaseInfoWithServer||, CODE, READONLY, ALIGN=2

                  PublicServer_SyncBaseInfoWithServer PROC
;;;82     *******************************************************************************/ 
;;;83     void PublicServer_SyncBaseInfoWithServer(void)
000000  4803              LDR      r0,|L3.16|
;;;84     {
;;;85         SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_12_IS_ALL_DATA_CMD);
000002  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000004  f4405080          ORR      r0,r0,#0x1000
000008  4901              LDR      r1,|L3.16|
00000a  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;86     }
00000c  4770              BX       lr
;;;87     
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      FwUpdateStatusObj

                          AREA ||i.PublicServer_SyncCostWithServer||, CODE, READONLY, ALIGN=2

                  PublicServer_SyncCostWithServer PROC
;;;93     *******************************************************************************/ 
;;;94     void PublicServer_SyncCostWithServer(void)
000000  4803              LDR      r0,|L4.16|
;;;95     {
;;;96         SetBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_9_IS_HOURS_DATA_CMD);
000002  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000004  f4407000          ORR      r0,r0,#0x200
000008  4901              LDR      r1,|L4.16|
00000a  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;97     }
00000c  4770              BX       lr
;;;98     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      FwUpdateStatusObj

                          AREA ||i.Reboot_Control||, CODE, READONLY, ALIGN=2

                  Reboot_Control PROC
;;;162    ****************************************************************************************************/ 
;;;163    void Reboot_Control(void)
000000  b570              PUSH     {r4-r6,lr}
;;;164    {
;;;165    	static uint8_t CurState=0,LastState=0;
;;;166    	
;;;167    	if(isBitSet(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_18_REBOOT_CONTROL_CMD))
000002  4867              LDR      r0,|L5.416|
000004  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000006  f4102f80          TST      r0,#0x40000
                  |L5.10|
00000a  d075              BEQ      |L5.248|
;;;168    	{ 				
;;;169    		ClrBit(FwUpdateStatusObj.TimelyCheck, TIMELY_CKECK_BIT_18_REBOOT_CONTROL_CMD);
00000c  4864              LDR      r0,|L5.416|
00000e  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000010  f4202080          BIC      r0,r0,#0x40000
000014  4962              LDR      r1,|L5.416|
000016  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;170    				
;;;171    		if(SwInformation.isRebootEnable)			//允许启用该功能
000018  4862              LDR      r0,|L5.420|
00001a  7880              LDRB     r0,[r0,#2]  ; SwInformation
00001c  2800              CMP      r0,#0
00001e  d0f4              BEQ      |L5.10|
;;;172    		{
;;;173    			if(isBitSet(iStaticsFlag, WIFI_WORK_NORMAL))
000020  4861              LDR      r0,|L5.424|
000022  7800              LDRB     r0,[r0,#0]  ; iStaticsFlag
000024  f0100f02          TST      r0,#2
000028  d007              BEQ      |L5.58|
;;;174    			{
;;;175    				CurState = 1;
00002a  2001              MOVS     r0,#1
00002c  495f              LDR      r1,|L5.428|
00002e  7008              STRB     r0,[r1,#0]
;;;176    				UdpDebugPrint("The wifi is OK!!!!!!!!\r\n",strlen("The wifi is OK!!!!!!!!\r\n")-1); 
000030  2117              MOVS     r1,#0x17
000032  a05f              ADR      r0,|L5.432|
000034  f7fffffe          BL       UdpDebugPrint
000038  e006              B        |L5.72|
                  |L5.58|
;;;177    			}
;;;178    			else
;;;179    			{
;;;180    				CurState = 0;
00003a  2000              MOVS     r0,#0
00003c  495b              LDR      r1,|L5.428|
00003e  7008              STRB     r0,[r1,#0]
;;;181    				UdpDebugPrint("The wifi can't connect!!!!!!!!\r\n",strlen("The wifi can't connect!!!!!!!!\r\n")-1); 
000040  211f              MOVS     r1,#0x1f
000042  a062              ADR      r0,|L5.460|
000044  f7fffffe          BL       UdpDebugPrint
                  |L5.72|
;;;182    			}
;;;183    
;;;184    			if(LastState != CurState)
000048  4869              LDR      r0,|L5.496|
00004a  7800              LDRB     r0,[r0,#0]  ; LastState
00004c  4957              LDR      r1,|L5.428|
00004e  7809              LDRB     r1,[r1,#0]  ; CurState
000050  4288              CMP      r0,r1
000052  d0da              BEQ      |L5.10|
;;;185    			{			
;;;186    				if(CurState == 0)
000054  4855              LDR      r0,|L5.428|
000056  7800              LDRB     r0,[r0,#0]  ; CurState
000058  2800              CMP      r0,#0
00005a  d178              BNE      |L5.334|
;;;187    				{
;;;188    			     #if(PORT_NUM == 6)
;;;189    				   uint8_t i = 0,j = 0;
00005c  2400              MOVS     r4,#0
00005e  2500              MOVS     r5,#0
;;;190    				   
;;;191    				   for(j=0;j<PORT_NUM;j++)
000060  bf00              NOP      
000062  e00f              B        |L5.132|
                  |L5.100|
;;;192    				   {
;;;193    				 		if(SwInformation.PortInfor[j].rebootPort==1)
000064  eb050185          ADD      r1,r5,r5,LSL #2
000068  484e              LDR      r0,|L5.420|
00006a  3008              ADDS     r0,r0,#8
00006c  eb000081          ADD      r0,r0,r1,LSL #2
000070  7cc0              LDRB     r0,[r0,#0x13]
000072  2801              CMP      r0,#1
000074  d104              BNE      |L5.128|
;;;194    						{
;;;195    							 //Switch_TurnOnOff(j+1, 0);
;;;196    							 SetPortState(j+1, 0);
000076  1c69              ADDS     r1,r5,#1
000078  b2c8              UXTB     r0,r1
00007a  2100              MOVS     r1,#0
00007c  f7fffffe          BL       SetPortState
                  |L5.128|
000080  1c68              ADDS     r0,r5,#1              ;191
000082  b2c5              UXTB     r5,r0                 ;191
                  |L5.132|
000084  2d06              CMP      r5,#6                 ;191
000086  dbed              BLT      |L5.100|
;;;197    						}
;;;198    				   }
;;;199    
;;;200    				   
;;;201    				   for(i=0;i<PORT_NUM;i++)
000088  2400              MOVS     r4,#0
00008a  e028              B        |L5.222|
                  |L5.140|
;;;202    				   {
;;;203    					   if(SwInformation.PortInfor[i].OnOffStatus)
00008c  eb040184          ADD      r1,r4,r4,LSL #2
000090  4844              LDR      r0,|L5.420|
000092  3008              ADDS     r0,r0,#8
000094  eb000081          ADD      r0,r0,r1,LSL #2
000098  7c40              LDRB     r0,[r0,#0x11]
00009a  b168              CBZ      r0,|L5.184|
;;;204    					   {
;;;205    						   SwOnOffData |= SwInformation.PortInfor[i].OnOffStatus<<i;
00009c  eb040184          ADD      r1,r4,r4,LSL #2
0000a0  4840              LDR      r0,|L5.420|
0000a2  3008              ADDS     r0,r0,#8
0000a4  eb000081          ADD      r0,r0,r1,LSL #2
0000a8  7c40              LDRB     r0,[r0,#0x11]
0000aa  40a0              LSLS     r0,r0,r4
0000ac  4951              LDR      r1,|L5.500|
0000ae  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
0000b0  4308              ORRS     r0,r0,r1
0000b2  4950              LDR      r1,|L5.500|
0000b4  7008              STRB     r0,[r1,#0]
0000b6  e010              B        |L5.218|
                  |L5.184|
;;;206    					   }
;;;207    					   else
;;;208    					   {
;;;209    						   SwOnOffData &= ~((!SwInformation.PortInfor[i].OnOffStatus)<<i);
0000b8  eb040184          ADD      r1,r4,r4,LSL #2
0000bc  4839              LDR      r0,|L5.420|
0000be  3008              ADDS     r0,r0,#8
0000c0  eb000081          ADD      r0,r0,r1,LSL #2
0000c4  7c40              LDRB     r0,[r0,#0x11]
0000c6  b908              CBNZ     r0,|L5.204|
0000c8  2001              MOVS     r0,#1
0000ca  e000              B        |L5.206|
                  |L5.204|
0000cc  2000              MOVS     r0,#0
                  |L5.206|
0000ce  40a0              LSLS     r0,r0,r4
0000d0  4948              LDR      r1,|L5.500|
0000d2  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
0000d4  4381              BICS     r1,r1,r0
0000d6  4847              LDR      r0,|L5.500|
0000d8  7001              STRB     r1,[r0,#0]
                  |L5.218|
0000da  1c60              ADDS     r0,r4,#1              ;201
0000dc  b2c4              UXTB     r4,r0                 ;201
                  |L5.222|
0000de  2c06              CMP      r4,#6                 ;201
0000e0  dbd4              BLT      |L5.140|
;;;210    					   }
;;;211    				   }
;;;212    				   
;;;213    				   msleep(200);
0000e2  20c8              MOVS     r0,#0xc8
0000e4  f7fffffe          BL       hf_thread_delay
;;;214    				   UsartControlPortOnOff(); 
0000e8  f7fffffe          BL       UsartControlPortOnOff
;;;215    				   
;;;216    				   msleep(8000);
0000ec  f44f50fa          MOV      r0,#0x1f40
0000f0  f7fffffe          BL       hf_thread_delay
;;;217    				   for(j=0;j<PORT_NUM;j++)
0000f4  2500              MOVS     r5,#0
0000f6  e010              B        |L5.282|
                  |L5.248|
0000f8  e050              B        |L5.412|
                  |L5.250|
;;;218    				   {
;;;219    						if(SwInformation.PortInfor[j].rebootPort==1)
0000fa  eb050185          ADD      r1,r5,r5,LSL #2
0000fe  4829              LDR      r0,|L5.420|
000100  3008              ADDS     r0,r0,#8
000102  eb000081          ADD      r0,r0,r1,LSL #2
000106  7cc0              LDRB     r0,[r0,#0x13]
000108  2801              CMP      r0,#1
00010a  d104              BNE      |L5.278|
;;;220    						{
;;;221    							 SetPortState(j+1,1);	 
00010c  1c69              ADDS     r1,r5,#1
00010e  b2c8              UXTB     r0,r1
000110  2101              MOVS     r1,#1
000112  f7fffffe          BL       SetPortState
                  |L5.278|
000116  1c68              ADDS     r0,r5,#1              ;217
000118  b2c5              UXTB     r5,r0                 ;217
                  |L5.282|
00011a  2d06              CMP      r5,#6                 ;217
00011c  dbed              BLT      |L5.250|
;;;222    						}
;;;223    				   }
;;;224    
;;;225    				   
;;;226    				   for(i=0;i<PORT_NUM;i++)
00011e  2400              MOVS     r4,#0
000120  e029              B        |L5.374|
                  |L5.290|
;;;227    				   {
;;;228    					   if(SwInformation.PortInfor[i].OnOffStatus)
000122  eb040184          ADD      r1,r4,r4,LSL #2
000126  481f              LDR      r0,|L5.420|
000128  3008              ADDS     r0,r0,#8
00012a  eb000081          ADD      r0,r0,r1,LSL #2
00012e  7c40              LDRB     r0,[r0,#0x11]
000130  b170              CBZ      r0,|L5.336|
;;;229    					   {
;;;230    						   SwOnOffData |= SwInformation.PortInfor[i].OnOffStatus<<i;
000132  eb040184          ADD      r1,r4,r4,LSL #2
000136  481b              LDR      r0,|L5.420|
000138  3008              ADDS     r0,r0,#8
00013a  eb000081          ADD      r0,r0,r1,LSL #2
00013e  7c40              LDRB     r0,[r0,#0x11]
000140  40a0              LSLS     r0,r0,r4
000142  492c              LDR      r1,|L5.500|
000144  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
000146  4308              ORRS     r0,r0,r1
000148  492a              LDR      r1,|L5.500|
00014a  7008              STRB     r0,[r1,#0]
00014c  e011              B        |L5.370|
                  |L5.334|
00014e  e021              B        |L5.404|
                  |L5.336|
;;;231    					   }
;;;232    					   else
;;;233    					   {
;;;234    						   SwOnOffData &= ~((!SwInformation.PortInfor[i].OnOffStatus)<<i);
000150  eb040184          ADD      r1,r4,r4,LSL #2
000154  4813              LDR      r0,|L5.420|
000156  3008              ADDS     r0,r0,#8
000158  eb000081          ADD      r0,r0,r1,LSL #2
00015c  7c40              LDRB     r0,[r0,#0x11]
00015e  b908              CBNZ     r0,|L5.356|
000160  2001              MOVS     r0,#1
000162  e000              B        |L5.358|
                  |L5.356|
000164  2000              MOVS     r0,#0
                  |L5.358|
000166  40a0              LSLS     r0,r0,r4
000168  4922              LDR      r1,|L5.500|
00016a  7809              LDRB     r1,[r1,#0]  ; SwOnOffData
00016c  4381              BICS     r1,r1,r0
00016e  4821              LDR      r0,|L5.500|
000170  7001              STRB     r1,[r0,#0]
                  |L5.370|
000172  1c60              ADDS     r0,r4,#1              ;226
000174  b2c4              UXTB     r4,r0                 ;226
                  |L5.374|
000176  2c06              CMP      r4,#6                 ;226
000178  dbd3              BLT      |L5.290|
;;;235    					   }
;;;236    				   }
;;;237    				   
;;;238    				   msleep(200);
00017a  20c8              MOVS     r0,#0xc8
00017c  f7fffffe          BL       hf_thread_delay
;;;239    				   UsartControlPortOnOff(); 
000180  f7fffffe          BL       UsartControlPortOnOff
;;;240    
;;;241    				 #elif(PORT_NUM == 1)
;;;242    			   		if(SwInformation.PortInfor[0].rebootPort == 1)
;;;243    			   		{
;;;244    		    			Port_TurnOnOff(0);
;;;245    						
;;;246    				   		msleep(5000);
;;;247    						Port_TurnOnOff(1);
;;;248    
;;;249    						//u_printf("publicServerCom.c--353\n");
;;;250    			   		}
;;;251    		   		  #endif
;;;252    
;;;253    				  	SwInformation.portChangeReason = PORT_CHANGE_BY_REBOOT;
000184  2003              MOVS     r0,#3
000186  4907              LDR      r1,|L5.420|
000188  70c8              STRB     r0,[r1,#3]
;;;254    
;;;255    				   UdpDebugPrint("Now excute the reboot port control\r\n",strlen("Now excute the reboot port control\r\n")-1); 
00018a  2123              MOVS     r1,#0x23
00018c  a01a              ADR      r0,|L5.504|
00018e  f7fffffe          BL       UdpDebugPrint
;;;256    				   //u_printf("Now excute the reboot port control\r\n");
;;;257    				}
000192  bf00              NOP      
                  |L5.404|
;;;258    				LastState = CurState;
000194  4805              LDR      r0,|L5.428|
000196  7800              LDRB     r0,[r0,#0]  ; CurState
000198  4915              LDR      r1,|L5.496|
00019a  7008              STRB     r0,[r1,#0]
                  |L5.412|
;;;259    			}
;;;260    		}
;;;261    	}
;;;262    }
00019c  bd70              POP      {r4-r6,pc}
;;;263    
                          ENDP

00019e  0000              DCW      0x0000
                  |L5.416|
                          DCD      FwUpdateStatusObj
                  |L5.420|
                          DCD      SwInformation
                  |L5.424|
                          DCD      iStaticsFlag
                  |L5.428|
                          DCD      CurState
                  |L5.432|
0001b0  54686520          DCB      "The wifi is OK!!!!!!!!\r\n",0
0001b4  77696669
0001b8  20697320
0001bc  4f4b2121
0001c0  21212121
0001c4  21210d0a
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L5.460|
0001cc  54686520          DCB      "The wifi can't connect!!!!!!!!\r\n",0
0001d0  77696669
0001d4  2063616e
0001d8  27742063
0001dc  6f6e6e65
0001e0  63742121
0001e4  21212121
0001e8  21210d0a
0001ec  00      
0001ed  00                DCB      0
0001ee  00                DCB      0
0001ef  00                DCB      0
                  |L5.496|
                          DCD      LastState
                  |L5.500|
                          DCD      SwOnOffData
                  |L5.504|
0001f8  4e6f7720          DCB      "Now excute the reboot port control\r\n",0
0001fc  65786375
000200  74652074
000204  68652072
000208  65626f6f
00020c  7420706f
000210  72742063
000214  6f6e7472
000218  6f6c0d0a
00021c  00      
00021d  00                DCB      0
00021e  00                DCB      0
00021f  00                DCB      0

                          AREA ||i.sendBroadcastinfo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_x
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                  sendBroadcastinfo PROC
;;;105    *******************************************************************************/ 
;;;106    void sendBroadcastinfo(void)
000000  b510              PUSH     {r4,lr}
;;;107    {
000002  b0d0              SUB      sp,sp,#0x140
;;;108    	char      pAck[256] = {0}; 
000004  f44f7180          MOV      r1,#0x100
000008  a810              ADD      r0,sp,#0x40
00000a  f7fffffe          BL       __aeabi_memclr4
;;;109        int       iLength;
;;;110    	
;;;111    	if(isBitSet(FwUpdateStatusObj.TimelyCheck, TIMELY_SEND_BIT_23_BROADCAST_INFO_CMD))
00000e  4828              LDR      r0,|L6.176|
000010  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
000012  f4100f00          TST      r0,#0x800000
000016  d048              BEQ      |L6.170|
;;;112    	{
;;;113    		ClrBit(FwUpdateStatusObj.TimelyCheck, TIMELY_SEND_BIT_23_BROADCAST_INFO_CMD);
000018  4825              LDR      r0,|L6.176|
00001a  6800              LDR      r0,[r0,#0]  ; FwUpdateStatusObj
00001c  f4200000          BIC      r0,r0,#0x800000
000020  4923              LDR      r1,|L6.176|
000022  6008              STR      r0,[r1,#0]  ; FwUpdateStatusObj
;;;114    		
;;;115    		iLength = sprintf(pAck, "{\"response\":%X,\"data\":{"
000024  4823              LDR      r0,|L6.180|
000026  6840              LDR      r0,[r0,#4]  ; CurFwVersionObj
000028  4922              LDR      r1,|L6.180|
00002a  6809              LDR      r1,[r1,#0]  ; CurFwVersionObj
00002c  4a22              LDR      r2,|L6.184|
00002e  6ad2              LDR      r2,[r2,#0x2c]  ; DevTimeObj
000030  4b22              LDR      r3,|L6.188|
000032  885b              LDRH     r3,[r3,#2]  ; MainSvrSockAddr
000034  e9cd320c          STRD     r3,r2,[sp,#0x30]
000038  e9cd100e          STRD     r1,r0,[sp,#0x38]
00003c  481f              LDR      r0,|L6.188|
00003e  6840              LDR      r0,[r0,#4]  ; MainSvrSockAddr
000040  491b              LDR      r1,|L6.176|
000042  7949              LDRB     r1,[r1,#5]  ; FwUpdateStatusObj
000044  4a1e              LDR      r2,|L6.192|
000046  7812              LDRB     r2,[r2,#0]  ; isGetRegid
000048  4b1e              LDR      r3,|L6.196|
00004a  e9cd3208          STRD     r3,r2,[sp,#0x20]
00004e  e9cd100a          STRD     r1,r0,[sp,#0x28]
000052  491d              LDR      r1,|L6.200|
000054  f1a10018          SUB      r0,r1,#0x18
000058  7940              LDRB     r0,[r0,#5]  ; DevInfoObj
00005a  f1a10218          SUB      r2,r1,#0x18
00005e  7912              LDRB     r2,[r2,#4]  ; DevInfoObj
000060  f1a10318          SUB      r3,r1,#0x18
000064  78db              LDRB     r3,[r3,#3]  ; DevInfoObj
000066  e9cd3204          STRD     r3,r2,[sp,#0x10]
00006a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00006e  f1a10018          SUB      r0,r1,#0x18
000072  7881              LDRB     r1,[r0,#2]  ; DevInfoObj
000074  7842              LDRB     r2,[r0,#1]  ; DevInfoObj
000076  7800              LDRB     r0,[r0,#0]  ; DevInfoObj
000078  4b13              LDR      r3,|L6.200|
00007a  330d              ADDS     r3,r3,#0xd
00007c  e9cd3000          STRD     r3,r0,[sp,#0]
000080  e9cd2102          STRD     r2,r1,[sp,#8]
000084  3b1e              SUBS     r3,r3,#0x1e
000086  2200              MOVS     r2,#0
000088  4910              LDR      r1,|L6.204|
00008a  a810              ADD      r0,sp,#0x40
00008c  f7fffffe          BL       __2sprintf
000090  4604              MOV      r4,r0
;;;116                                        "\"sn\":\"%s\","
;;;117                                        "\"name\":\"%s\","
;;;118                                        "\"mac\":\"%02X:%02X:%02X:%02X:%02X:%02X\","
;;;119                                        "\"sak\":\"%s\","
;;;120                                        "\"regid\":\"%s\","
;;;121                                        "\"isGetRegid\":%d,"
;;;122                                        "\"isMainSvrOK\":%d,"
;;;123                                        "\"MainSveIP\":\"%08X\","
;;;124                                        "\"MainSvrPort\":\"%x\","
;;;125                                        "\"time\":%d,"
;;;126                                        "\"ver\":\"%d.%02d\"}}",
;;;127                                        DEV_QUERY_BROADCAST_DOWN_00_CMD, 
;;;128                                        DevInfoObj.dev_sn, 
;;;129                                        DevInfoObj.dev_name,
;;;130                                        DevInfoObj.Dev_Mac[0], DevInfoObj.Dev_Mac[1],
;;;131                                        DevInfoObj.Dev_Mac[2], DevInfoObj.Dev_Mac[3],
;;;132                                        DevInfoObj.Dev_Mac[4], DevInfoObj.Dev_Mac[5],
;;;133                                        DevInfoObj.dev_sak,
;;;134                                        DevRegInformation.regidName,            				 //手机发送的用户账号名,
;;;135                                        isGetRegid,FwUpdateStatusObj.isMainSvrOK,
;;;136    	                      			MainSvrSockAddr.sin_addr.s_addr,
;;;137    	                      			MainSvrSockAddr.sin_port,
;;;138    	                      			DevTimeObj.NowTimeSec,
;;;139                                        CurFwVersionObj.big_ver, 
;;;140                                        CurFwVersionObj.little_ver
;;;141                                        );  
;;;142            if(-1 == iLength)
000092  f1b43fff          CMP      r4,#0xffffffff
000096  d101              BNE      |L6.156|
                  |L6.152|
;;;143            { 
;;;144                return;
;;;145            } 
;;;146            *(pAck + iLength) = '\0'; 
;;;147    
;;;148    		UdpDebugPrint(pAck, iLength);
;;;149    	}
;;;150    }
000098  b050              ADD      sp,sp,#0x140
00009a  bd10              POP      {r4,pc}
                  |L6.156|
00009c  2000              MOVS     r0,#0                 ;146
00009e  a910              ADD      r1,sp,#0x40           ;146
0000a0  5508              STRB     r0,[r1,r4]            ;146
0000a2  4621              MOV      r1,r4                 ;148
0000a4  a810              ADD      r0,sp,#0x40           ;148
0000a6  f7fffffe          BL       UdpDebugPrint
                  |L6.170|
0000aa  bf00              NOP      
0000ac  e7f4              B        |L6.152|
;;;151    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L6.176|
                          DCD      FwUpdateStatusObj
                  |L6.180|
                          DCD      CurFwVersionObj
                  |L6.184|
                          DCD      DevTimeObj
                  |L6.188|
                          DCD      MainSvrSockAddr
                  |L6.192|
                          DCD      isGetRegid
                  |L6.196|
                          DCD      DevRegInformation
                  |L6.200|
                          DCD      DevInfoObj+0x18
                  |L6.204|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  7b227265          DCB      0x7b,0x22,0x72,0x65
000004  73706f6e          DCB      0x73,0x70,0x6f,0x6e
000008  7365223a          DCB      0x73,0x65,0x22,0x3a
00000c  25582c22          DCB      0x25,0x58,0x2c,0x22
000010  64617461          DCB      0x64,0x61,0x74,0x61
000014  223a7b22          DCB      0x22,0x3a,0x7b,0x22
000018  736e223a          DCB      0x73,0x6e,0x22,0x3a
00001c  22257322          DCB      0x22,0x25,0x73,0x22
000020  2c226e61          DCB      0x2c,0x22,0x6e,0x61
000024  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000028  22257322          DCB      0x22,0x25,0x73,0x22
00002c  2c226d61          DCB      0x2c,0x22,0x6d,0x61
000030  63223a22          DCB      0x63,0x22,0x3a,0x22
000034  25303258          DCB      0x25,0x30,0x32,0x58
000038  3a253032          DCB      0x3a,0x25,0x30,0x32
00003c  583a2530          DCB      0x58,0x3a,0x25,0x30
000040  32583a25          DCB      0x32,0x58,0x3a,0x25
000044  3032583a          DCB      0x30,0x32,0x58,0x3a
000048  25303258          DCB      0x25,0x30,0x32,0x58
00004c  3a253032          DCB      0x3a,0x25,0x30,0x32
000050  58222c22          DCB      0x58,0x22,0x2c,0x22
000054  73616b22          DCB      0x73,0x61,0x6b,0x22
000058  3a222573          DCB      0x3a,0x22,0x25,0x73
00005c  222c2272          DCB      0x22,0x2c,0x22,0x72
000060  65676964          DCB      0x65,0x67,0x69,0x64
000064  223a2225          DCB      0x22,0x3a,0x22,0x25
000068  73222c22          DCB      0x73,0x22,0x2c,0x22
00006c  69734765          DCB      0x69,0x73,0x47,0x65
000070  74526567          DCB      0x74,0x52,0x65,0x67
000074  6964223a          DCB      0x69,0x64,0x22,0x3a
000078  25642c22          DCB      0x25,0x64,0x2c,0x22
00007c  69734d61          DCB      0x69,0x73,0x4d,0x61
000080  696e5376          DCB      0x69,0x6e,0x53,0x76
000084  724f4b22          DCB      0x72,0x4f,0x4b,0x22
000088  3a25642c          DCB      0x3a,0x25,0x64,0x2c
00008c  224d6169          DCB      0x22,0x4d,0x61,0x69
000090  6e537665          DCB      0x6e,0x53,0x76,0x65
000094  4950223a          DCB      0x49,0x50,0x22,0x3a
000098  22253038          DCB      0x22,0x25,0x30,0x38
00009c  58222c22          DCB      0x58,0x22,0x2c,0x22
0000a0  4d61696e          DCB      0x4d,0x61,0x69,0x6e
0000a4  53767250          DCB      0x53,0x76,0x72,0x50
0000a8  6f727422          DCB      0x6f,0x72,0x74,0x22
0000ac  3a222578          DCB      0x3a,0x22,0x25,0x78
0000b0  222c2274          DCB      0x22,0x2c,0x22,0x74
0000b4  696d6522          DCB      0x69,0x6d,0x65,0x22
0000b8  3a25642c          DCB      0x3a,0x25,0x64,0x2c
0000bc  22766572          DCB      0x22,0x76,0x65,0x72
0000c0  223a2225          DCB      0x22,0x3a,0x22,0x25
0000c4  642e2530          DCB      0x64,0x2e,0x25,0x30
0000c8  3264227d          DCB      0x32,0x64,0x22,0x7d
0000cc  7d00              DCB      0x7d,0x00

                          AREA ||.data||, DATA, ALIGN=1

                  reportRTHourmark
000000  00                DCB      0x00
                  hasSynInfo
000001  00                DCB      0x00
                  heartBeatCount
000002  0000              DCW      0x0000
                  pageID
000004  00                DCB      0x00
                  resetWifiMark
000005  00                DCB      0x00
                  CurState
000006  00                DCB      0x00
                  LastState
000007  00                DCB      0x00
