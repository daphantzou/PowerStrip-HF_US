; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\remote_update.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\remote_update.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=494 -I../sdk/1.50/include/ -I../inc -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -D__KEIL_MDK__ -D__LPB100__ --enum_is_int --omf_browse=.\output\remote_update.crf ..\src\remote_update.c]
                          THUMB

                          AREA ||i.update_as_http||, CODE, READONLY, ALIGN=2

                  update_as_http PROC
;;;27     #define     UPDATE_URL_LENGTH               256 
;;;28     extern int update_as_http(char *purl)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;29     { 
000004  b0a5              SUB      sp,sp,#0x94
000006  4680              MOV      r8,r0
;;;30     	httpc_req_t         http_req; 
;;;31     	char                *content_data=NULL; 
000008  2400              MOVS     r4,#0
;;;32     	char                *temp_buf=NULL; 
00000a  2500              MOVS     r5,#0
;;;33     	parsed_url_t        url   = {0}; 
00000c  2000              MOVS     r0,#0
00000e  901c              STR      r0,[sp,#0x70]
000010  901d              STR      r0,[sp,#0x74]
000012  901e              STR      r0,[sp,#0x78]
000014  901f              STR      r0,[sp,#0x7c]
;;;34     	http_session_t      hhttp = 0; 
000016  901b              STR      r0,[sp,#0x6c]
;;;35     	int                 total_size, read_size=0, rv=0; 
000018  2700              MOVS     r7,#0
00001a  4682              MOV      r10,r0
;;;36     	tls_init_config_t   *tls_cfg  = NULL; 
00001c  4683              MOV      r11,r0
;;;37     	char                *test_url = purl; 
00001e  46c1              MOV      r9,r8
;;;38     	struct MD5Context   md5_ctx; 
;;;39     	uint8_t             digest[16]={0}; 
000020  9001              STR      r0,[sp,#4]
000022  9002              STR      r0,[sp,#8]
000024  9003              STR      r0,[sp,#0xc]
000026  9004              STR      r0,[sp,#0x10]
;;;40         #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;41         char                HttpReaMsg[100];
;;;42         int                 iLength;
;;;43         #endif 
;;;44     	
;;;45     	// 
;;;46         #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;47         UdpDebugPrint("Start Url Update\r\n", sizeof("Start Url Update\r\n")-1);
;;;48         UdpDebugPrint(purl, strlen(purl)); 
;;;49         #endif 
;;;50     	memset(&http_req, '\0', sizeof(http_req));
000028  2114              MOVS     r1,#0x14
00002a  a820              ADD      r0,sp,#0x80
00002c  f7fffffe          BL       __aeabi_memclr4
;;;51     	http_req.type    = HTTP_GET;
000030  2001              MOVS     r0,#1
000032  9020              STR      r0,[sp,#0x80]
;;;52     	http_req.version = HTTP_VER_1_1;
000034  9022              STR      r0,[sp,#0x88]
;;;53     	
;;;54     	if((temp_buf = (char*)hfmem_malloc(UPDATE_URL_LENGTH))==NULL)
000036  0200              LSLS     r0,r0,#8
000038  f7fffffe          BL       hfmem_malloc
00003c  0005              MOVS     r5,r0
00003e  d102              BNE      |L1.70|
;;;55     	{
;;;56             #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;57             UdpDebugPrint("Http hfmem_malloc fail\r\n", sizeof("Http hfmem_malloc fail\r\n")-1);
;;;58             #endif 
;;;59     		rv = -HF_E_NOMEM;
000040  f06f0a0c          MVN      r10,#0xc
;;;60     		goto exit;
000044  e068              B        |L1.280|
                  |L1.70|
;;;61     	}
;;;62     	memset(temp_buf, '\0', UPDATE_URL_LENGTH);
000046  f44f7180          MOV      r1,#0x100
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       __aeabi_memclr
;;;63     	if((rv = hfhttp_parse_URL(test_url, temp_buf, UPDATE_URL_LENGTH, &url))!=HF_SUCCESS)
000050  ab1c              ADD      r3,sp,#0x70
000052  f44f7280          MOV      r2,#0x100
000056  4629              MOV      r1,r5
000058  4648              MOV      r0,r9
00005a  f7fffffe          BL       http_parse_URL
00005e  ea5f0a00          MOVS     r10,r0
000062  d000              BEQ      |L1.102|
;;;64     	{
;;;65             #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;66             UdpDebugPrint("Http hfhttp_parse_URL fail\r\n", sizeof("Http hfhttp_parse_URL fail\r\n")-1);
;;;67             #endif 
;;;68     		goto exit;
000064  e058              B        |L1.280|
                  |L1.102|
;;;69     	}
;;;70     	if((rv = hfhttp_open_session(&hhttp, test_url, 0, tls_cfg, 3))!=HF_SUCCESS)
000066  2003              MOVS     r0,#3
000068  465b              MOV      r3,r11
00006a  2200              MOVS     r2,#0
00006c  4649              MOV      r1,r9
00006e  9000              STR      r0,[sp,#0]
000070  a81b              ADD      r0,sp,#0x6c
000072  f7fffffe          BL       http_open_session
000076  ea5f0a00          MOVS     r10,r0
00007a  d000              BEQ      |L1.126|
;;;71     	{
;;;72             #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;73             UdpDebugPrint("Http hfhttp_open_session fail\r\n", sizeof("Http hfhttp_open_session fail\r\n")-1);
;;;74             #endif 
;;;75     		goto exit;
00007c  e04c              B        |L1.280|
                  |L1.126|
;;;76     	}
;;;77     	hfsys_disable_all_soft_watchdogs();
00007e  f7fffffe          BL       hfsys_disable_all_soft_watchdogs
;;;78     	
;;;79     	http_req.resource = url.resource;
000082  981f              LDR      r0,[sp,#0x7c]
000084  9021              STR      r0,[sp,#0x84]
;;;80     	hfhttp_prepare_req(hhttp, &http_req, HDR_ADD_CONN_CLOSE);
000086  2204              MOVS     r2,#4
000088  a920              ADD      r1,sp,#0x80
00008a  981b              LDR      r0,[sp,#0x6c]
00008c  f7fffffe          BL       http_prepare_req
;;;81     	hfhttp_add_header(hhttp, "Range", "bytes=0");
000090  a22b              ADR      r2,|L1.320|
000092  a12d              ADR      r1,|L1.328|
000094  981b              LDR      r0,[sp,#0x6c]
000096  f7fffffe          BL       http_add_header
;;;82     	if((rv = hfhttp_send_request(hhttp, &http_req))!=HF_SUCCESS)
00009a  a920              ADD      r1,sp,#0x80
00009c  981b              LDR      r0,[sp,#0x6c]
00009e  f7fffffe          BL       http_send_request
0000a2  ea5f0a00          MOVS     r10,r0
0000a6  d000              BEQ      |L1.170|
;;;83     	{
;;;84             #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;85             UdpDebugPrint("Http hfhttp_send_request fail\r\n", sizeof("Http hfhttp_send_request fail\r\n")-1);
;;;86             #endif 
;;;87     		goto exit;
0000a8  e036              B        |L1.280|
                  |L1.170|
;;;88     	}
;;;89     	content_data = (char*)hfmem_malloc(UPDATE_PACKET_LENGTH);
0000aa  f44f7000          MOV      r0,#0x200
0000ae  f7fffffe          BL       hfmem_malloc
0000b2  4604              MOV      r4,r0
;;;90     	if(content_data == NULL)
0000b4  b914              CBNZ     r4,|L1.188|
;;;91     	{
;;;92             #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;93             UdpDebugPrint("Http content_data fail\r\n", sizeof("Http content_data fail\r\n")-1);
;;;94             #endif 
;;;95     		rv = -HF_E_NOMEM;
0000b6  f06f0a0c          MVN      r10,#0xc
;;;96     		goto exit;
0000ba  e02d              B        |L1.280|
                  |L1.188|
;;;97     	}
;;;98     	
;;;99         #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;100        UdpDebugPrint("Http Update\r\n", sizeof("Http Update\r\n")-1);
;;;101        #endif 
;;;102        
;;;103    	total_size = 0;
0000bc  2600              MOVS     r6,#0
;;;104    	memset(content_data, '\0', UPDATE_PACKET_LENGTH);
0000be  f44f7100          MOV      r1,#0x200
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       __aeabi_memclr
;;;105    	hfupdate_start(HFUPDATE_SW);
0000c8  2000              MOVS     r0,#0
0000ca  f7fffffe          BL       hfupdate_start
;;;106    	MD5Init(&md5_ctx);
0000ce  a805              ADD      r0,sp,#0x14
0000d0  f7fffffe          BL       MD5Init
;;;107    	while((read_size = hfhttp_read_content(hhttp, content_data, UPDATE_PACKET_LENGTH))>0)
0000d4  e00b              B        |L1.238|
                  |L1.214|
;;;108    	{ 
;;;109    		hfupdate_write_file(HFUPDATE_SW, total_size, content_data, read_size);
0000d6  463b              MOV      r3,r7
0000d8  4622              MOV      r2,r4
0000da  4631              MOV      r1,r6
0000dc  2000              MOVS     r0,#0
0000de  f7fffffe          BL       hfupdate_write_file
;;;110    		MD5Update(&md5_ctx, (uint8_t*)content_data, read_size);
0000e2  463a              MOV      r2,r7
0000e4  4621              MOV      r1,r4
0000e6  a805              ADD      r0,sp,#0x14
0000e8  f7fffffe          BL       MD5Update
;;;111    		total_size += read_size;
0000ec  443e              ADD      r6,r6,r7
                  |L1.238|
0000ee  f44f7200          MOV      r2,#0x200             ;107
0000f2  4621              MOV      r1,r4                 ;107
0000f4  981b              LDR      r0,[sp,#0x6c]         ;107
0000f6  f7fffffe          BL       http_read_content
0000fa  1e07              SUBS     r7,r0,#0              ;107
0000fc  dceb              BGT      |L1.214|
;;;112    	} 
;;;113        MD5Final(digest, &md5_ctx);
0000fe  a905              ADD      r1,sp,#0x14
000100  a801              ADD      r0,sp,#4
000102  f7fffffe          BL       MD5Final
;;;114        
;;;115        #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;116        iLength = sprintf(HttpReaMsg, "\r\nUpdate total size=%08x, read_size=%08x\r\n", 
;;;117                                        total_size, read_size); 
;;;118        UdpDebugPrint(HttpReaMsg, iLength); 
;;;119        #endif 
;;;120    	if(hfupdate_complete(HFUPDATE_SW, total_size) == HF_SUCCESS)
000106  4631              MOV      r1,r6
000108  2000              MOVS     r0,#0
00010a  f7fffffe          BL       hfupdate_complete
00010e  b910              CBNZ     r0,|L1.278|
;;;121    	{ 
;;;122            #if defined(__URL_UPDATE_DBG__) && defined(__UDP_PRINT_DBG__) 
;;;123            UdpDebugPrint("hfupdate_complete success ^_^\r\n", sizeof("hfupdate_complete success ^_^\r\n")-1);
;;;124            #endif 
;;;125    
;;;126            Reboot(0);
000110  2000              MOVS     r0,#0
000112  f7fffffe          BL       Reboot
                  |L1.278|
;;;127    	} 
;;;128    exit:
000116  bf00              NOP      
                  |L1.280|
;;;129    	if(temp_buf != NULL) 
000118  b115              CBZ      r5,|L1.288|
;;;130    	{ 
;;;131    		hfmem_free(temp_buf);
00011a  4628              MOV      r0,r5
00011c  f7fffffe          BL       hfmem_free
                  |L1.288|
;;;132    	} 
;;;133    	if(content_data != NULL)
000120  b114              CBZ      r4,|L1.296|
;;;134    	{ 
;;;135    		hfmem_free(content_data);
000122  4620              MOV      r0,r4
000124  f7fffffe          BL       hfmem_free
                  |L1.296|
;;;136    	} 
;;;137    	if(hhttp != 0)
000128  981b              LDR      r0,[sp,#0x6c]
00012a  b110              CBZ      r0,|L1.306|
;;;138    	{ 
;;;139    		hfhttp_close_session(&hhttp); 
00012c  a81b              ADD      r0,sp,#0x6c
00012e  f7fffffe          BL       http_close_session
                  |L1.306|
;;;140    	} 
;;;141    	hfsys_enable_all_soft_watchdogs();
000132  f7fffffe          BL       hfsys_enable_all_soft_watchdogs
;;;142    	return rv;
000136  4650              MOV      r0,r10
;;;143    }
000138  b025              ADD      sp,sp,#0x94
00013a  e8bd8ff0          POP      {r4-r11,pc}
;;;144    /*******************************************************************************
                          ENDP

00013e  0000              DCW      0x0000
                  |L1.320|
000140  62797465          DCB      "bytes=0",0
000144  733d3000
                  |L1.328|
000148  52616e67          DCB      "Range",0
00014c  6500    
00014e  00                DCB      0
00014f  00                DCB      0
